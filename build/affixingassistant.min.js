const WELCOME_VIEW=()=>`<div class="welcome">
        <div>
            <div>
                <div class="content">
                    <div>
                        <h1>PSO2 Affixing Assistant</h1>
                    </div>
                    <p>How it works:</p>
                    <div>
                        <img src="css/res/howItWorks.png">
                    </div>
                </div>
            </div>
        </div>
    </div>`;const PAGE_TREE_NODE_TEMPLATE=({pageTreeNode,level,offset})=>{let treeNodeTemplate='<div class="mgrid"><div>';level=(typeof level==='number')?level:0;offset=(typeof offset==='number')?offset:0;let connectionOrder=[];let capacity=(new Page).CAPACITY;for(var i=0;i<pageTreeNode.size();i++){let childPage=pageTreeNode.children[i].page;connectionOrder.push(-1);if(!childPage)continue;for(var j=0;j<pageTreeNode.page.size();j++){let fodder=pageTreeNode.page.fodders[j];if(childPage.connectedTo instanceof Fodder&&childPage.connectedTo===fodder){connectionOrder[j]=(offset*capacity)+i;break}}}
if(pageTreeNode.page&&(pageTreeNode.page instanceof Page)){treeNodeTemplate+=PAGE_TEMPLATE({page:pageTreeNode.page,isGoal:pageTreeNode.isGoal,rateBoostOptions:pageTreeNode.rateBoostOptions.map(a=>a.id),potentialOptions:pageTreeNode.potentialOptions.map(a=>a.id),level:level,offset:offset,fodderOffsets:connectionOrder})}
treeNodeTemplate+='</div><div>';if(pageTreeNode.size()>0){for(var i=0;i<pageTreeNode.size();i++){treeNodeTemplate+=PAGE_TREE_NODE_TEMPLATE({pageTreeNode:pageTreeNode.children[i],level:(level+1),offset:(offset*capacity)+i})}}
treeNodeTemplate+='</div></div>';return treeNodeTemplate};const PAGE_TEMPLATE=({page,isGoal,rateBoostOptions,potentialOptions,level,offset,fodderOffsets})=>{let capacity=(new Page).CAPACITY;let dataConn;if(typeof level==='number')dataConn=((Math.pow(capacity,level)-1)/(capacity-1))+offset;else dataConn=0;let pageTempate=`<div ${(isGoal) ? `id="goal" ` : ``}class="page" ${(dataConn >= 0) ? `data-conn="` + dataConn + `"` : ``}><div>`;if(page&&page instanceof Page){let fodders=page.fodders;let fodderDataConnBase;if(typeof level==='number')fodderDataConnBase=((Math.pow(capacity,level+1)-1)/(capacity-1));else fodderDataConnBase=0;for(var i=0;i<((isGoal)?1:fodders.length);i++){pageTempate+=FODDER_TEMPLATE({fodder:fodders[i],isGoal:isGoal,titleLabel:(isGoal)?'GOAL':('Fodder '+i),produceLabel:(isGoal)?'RE-AFFIX IT':null,dataConn:(fodderOffsets[i]>=0)?fodderDataConnBase+fodderOffsets[i]:-1,isSameGear:page.fodders[i].isSameGear,rateBoostOptions:rateBoostOptions,rateBoostIdx:page.fodders[i].rateBoostIdx,potentialOptions:potentialOptions,potentialIdx:page.fodders[i].potentialIdx})}
pageTempate+=`</div>`;if(!isGoal){pageTempate+=`<div class="success-indicator">
                <span>Stage Success: </span>
                <span>${(page.successRate >= 0) ? page.successRate + `%` : `?`}</span>
            </div>`}}
pageTempate+=`</div>`;return pageTempate};const FODDER_TEMPLATE=({fodder,isGoal,titleLabel,dataConn,produceLabel,isSameGear,rateBoostOptions,rateBoostIdx,potentialOptions,potentialIdx})=>`<div class="fodder" ${(dataConn >= 0) ? `data-conn="` + dataConn + `"` : ``}>
            <div class="title">${titleLabel}</div>
            <div class="affixes">
                <div class="affix${(fodder && fodder.affixes[0] && fodder.affixes[0].noEx) ? ` ssa` : ``}"${(fodder && fodder.affixes[0] && fodder.affixes[0].effect) ? ` title="${fodder.affixes[0].effect.replace(/,<br>/g, ', ').replace(/<br>/g, ' : ')}"` : ``}>${(fodder && fodder.affixes[0]) ? fodder.affixes[0].name : `&nbsp;`}${(fodder.affixes[0]) ? (fodder.affixSuccessRates && fodder.affixSuccessRates[0]) ? `:<span title="${fodder.affixSuccessRates[0]}% chance of transfering this ability">${fodder.affixSuccessRates[0]}%</span>` : `` : ``}</div>
                <div class="affix${(fodder && fodder.affixes[1] && fodder.affixes[1].noEx) ? ` ssa` : ``}"${(fodder && fodder.affixes[1] && fodder.affixes[1].effect) ? ` title="${fodder.affixes[1].effect.replace(/,<br>/g, ', ').replace(/<br>/g, ' : ')}"` : ``}>${(fodder && fodder.affixes[1]) ? fodder.affixes[1].name : `&nbsp;`}${(fodder.affixes[1]) ? (fodder.affixSuccessRates && fodder.affixSuccessRates[1]) ? `:<span title="${fodder.affixSuccessRates[1]}% chance of transfering this ability">${fodder.affixSuccessRates[1]}%</span>` : `` : ``}</div>
                <div class="affix${(fodder && fodder.affixes[2] && fodder.affixes[2].noEx) ? ` ssa` : ``}"${(fodder && fodder.affixes[2] && fodder.affixes[2].effect) ? ` title="${fodder.affixes[2].effect.replace(/,<br>/g, ', ').replace(/<br>/g, ' : ')}"` : ``}>${(fodder && fodder.affixes[2]) ? fodder.affixes[2].name : `&nbsp;`}${(fodder.affixes[2]) ? (fodder.affixSuccessRates && fodder.affixSuccessRates[2]) ? `:<span title="${fodder.affixSuccessRates[2]}% chance of transfering this ability">${fodder.affixSuccessRates[2]}%</span>` : `` : ``}</div>
                <div class="affix${(fodder && fodder.affixes[3] && fodder.affixes[3].noEx) ? ` ssa` : ``}"${(fodder && fodder.affixes[3] && fodder.affixes[3].effect) ? ` title="${fodder.affixes[3].effect.replace(/,<br>/g, ', ').replace(/<br>/g, ' : ')}"` : ``}>${(fodder && fodder.affixes[3]) ? fodder.affixes[3].name : `&nbsp;`}${(fodder.affixes[3]) ? (fodder.affixSuccessRates && fodder.affixSuccessRates[3]) ? `:<span title="${fodder.affixSuccessRates[3]}% chance of transfering this ability">${fodder.affixSuccessRates[3]}%</span>` : `` : ``}</div>
                <div class="affix${(fodder && fodder.affixes[4] && fodder.affixes[4].noEx) ? ` ssa` : ``}"${(fodder && fodder.affixes[4] && fodder.affixes[4].effect) ? ` title="${fodder.affixes[4].effect.replace(/,<br>/g, ', ').replace(/<br>/g, ' : ')}"` : ``}>${(fodder && fodder.affixes[4]) ? fodder.affixes[4].name : `&nbsp;`}${(fodder.affixes[4]) ? (fodder.affixSuccessRates && fodder.affixSuccessRates[4]) ? `:<span title="${fodder.affixSuccessRates[4]}% chance of transfering this ability">${fodder.affixSuccessRates[4]}%</span>` : `` : ``}</div>
                <div class="affix${(fodder && fodder.affixes[5] && fodder.affixes[5].noEx) ? ` ssa` : ``}"${(fodder && fodder.affixes[5] && fodder.affixes[5].effect) ? ` title="${fodder.affixes[5].effect.replace(/,<br>/g, ', ').replace(/<br>/g, ' : ')}"` : ``}>${(fodder && fodder.affixes[5]) ? fodder.affixes[5].name : `&nbsp;`}${(fodder.affixes[5]) ? (fodder.affixSuccessRates && fodder.affixSuccessRates[5]) ? `:<span title="${fodder.affixSuccessRates[5]}% chance of transfering this ability">${fodder.affixSuccessRates[5]}%</span>` : `` : ``}</div>
                <div class="affix${(fodder && fodder.affixes[6] && fodder.affixes[6].noEx) ? ` ssa` : ``}"${(fodder && fodder.affixes[6] && fodder.affixes[6].effect) ? ` title="${fodder.affixes[6].effect.replace(/,<br>/g, ', ').replace(/<br>/g, ' : ')}"` : ``}>${(fodder && fodder.affixes[6]) ? fodder.affixes[6].name : `&nbsp;`}${(fodder.affixes[6]) ? (fodder.affixSuccessRates && fodder.affixSuccessRates[6]) ? `:<span title="${fodder.affixSuccessRates[6]}% chance of transfering this ability">${fodder.affixSuccessRates[6]}%</span>` : `` : ``}</div>
                <div class="affix${(fodder && fodder.affixes[7] && fodder.affixes[7].noEx) ? ` ssa` : ``}"${(fodder && fodder.affixes[7] && fodder.affixes[7].effect) ? ` title="${fodder.affixes[7].effect.replace(/,<br>/g, ', ').replace(/<br>/g, ' : ')}"` : ``}>${(fodder && fodder.affixes[7]) ? fodder.affixes[7].name : `&nbsp;`}${(fodder.affixes[7]) ? (fodder.affixSuccessRates && fodder.affixSuccessRates[7]) ? `:<span title="${fodder.affixSuccessRates[7]}% chance of transfering this ability">${fodder.affixSuccessRates[7]}%</span>` : `` : ``}</div>
            </div>
            <div class="divider"></div>
            ${((fodder && fodder.specialAbilityFactor) ? `<div class="affix special-ability-factor">Special Ability Factor<br>(${fodder.specialAbilityFactor.name})</div><div class="divider"></div>` : ``)}
            <div class="produce-button${((fodder.hasNonTransferableAffixes()) ? ` disabled">CANNOT AFFIX` : `">${(produceLabel)?produceLabel:((dataConn>=0)?`RE-AFFIX IT`:`AFFIX IT`)}`)}</div>
            <div class="success-indicator" title="Success in making this equipment">
                <span>${(isGoal) ? `Goal` : `Fodder`} Success: </span>
            <span>${(fodder.overallSuccessRate >= 0) ? fodder.overallSuccessRate + `%` : `?`}</span>
            </div>
            ${(fodder.affixSuccessRates.length > 0) ?
            `<div class="boost-container">${CHECKBOX_TEMPLATE({label:`Same Equipment`,description:`Is fodder made with identical equipment?`,isChecked:isSameGear})+DROPDOWN_TEMPLATE({type:0,options:rateBoostOptions,selected:(rateBoostIdx>=0)?rateBoostIdx:undefined,description:`Is fodder using Affix Boost Item?`})+DROPDOWN_TEMPLATE({type:1,options:potentialOptions,selected:(potentialIdx>=0)?potentialIdx:undefined,description:`Does equipment have potential that boosts affixing?`})}</div>` : ``}
            ${((fodder && fodder.addAbilityItemInUse) ? `<div class="affix add-ability">${fodder.addAbilityItemInUse.name}</div>` : ``)}
        </div>`;const LINK_TEMPLATE=({link,linkToSim})=>{return `<div class="link-container hidden" onclick="$(this).remove();">
        <div onclick="event.stopPropagation();">
            <div class="main-grid">
                <div class="title bold">Link to This Formula</div><div class="content">
    					<input type="text" value="${link}" onfocus="this.setSelectionRange(0, this.value.length)">
                    </div>
                <div>
                    <div>
                        <div class="copy-button"><a>Copy to Clipboard</a></div>
                        <div class="copy-button"><a  href="${linkToSim}" target="_blank">Open in Affix Simulator</a></div>
                        <div class="confirm-button">Close</div>
                    </div>
                </div>
            </div>
        </div>
    </div>`}
const DROPDOWN_TEMPLATE=({type,options,selected,description})=>{let dropdown=`<div class="dropdown-container${(type == 0) ? ` success-rate` : ((type == 1) ? ` equipment-potential` : ``)}"`;if(description)dropdown+=` title="${description}"`;dropdown+=`><select>`;if(Array.isArray(options)){if(typeof selected==='number'&&selected>=options.length)
selected=0;for(var i=0;i<options.length;i++){let isSelected=(typeof selected==='number'&&selected==i)||(selected==options[i]);dropdown+=`<option value="${options[i]}" ${(isSelected) ? `selected` : ``}>${options[i]}</option>`}}
dropdown+=`</select></div>`;return dropdown};const CHECKBOX_TEMPLATE=({label,description,isChecked})=>`<div class="checkbox-container">
        <div class="checkbox-holder">
            <div${(description) ? ` title="${description}"` : ``}>${(label) ? label : ``}</div>
            <label class="checkmark-holder">
                <input type="checkbox" ${(isChecked) ? `checked` : ``}>
                <span class="checkmark"></span>
            </label>
        </div>
    </div>`;const FILTER_SEARCH_TEMPLATE=({categories,datalist,isGlobalSearch})=>{let filtersearch=`<div class="filtersearchcontainer">
        <script>
            filterSearch = function (input) {
                let filter = input.value.toUpperCase();
                let li = ${(isGlobalSearch) ? `$(".filtersearchcontainer li")` : `$(input).parent().find('li')`};
                for (var i = 0; i < li.length; i++) {
                    let div = li[i].getElementsByTagName("div")[0];
                    if (div.innerHTML.toUpperCase().indexOf(filter) > -1) {
                        li[i].style.display = "";
                    } else {
                        li[i].style.display = "none";
                    }
                }
            };
        </script>
        <div>`;if(Array.isArray(categories)){for(var i=0;i<categories.length;i++){filtersearch+=RADIO_BUTTON_TEMPLATE({isChecked:i==0,description:categories[i]})}}
filtersearch+=`</div>
        <input type="text" class="searchbar" onkeyup="filterSearch(this)" onfocus="this.setSelectionRange(0, this.value.length)" placeholder="Search for affixes.." title="Type in an affix name" maxlength="32">
        <ul>`;if(Array.isArray(datalist)){for(var i=0;i<datalist.length;i++){if(datalist[i].code){filtersearch+=`<li><div title="${datalist[i].effect.replace(/<br>/g, ' ')}" data-code="${datalist[i].code}">${datalist[i].name}</div></li>`}
else if(datalist[i].isAddAbilityItem){let choice=`${datalist[i].transferRate}% : ${datalist[i].name}`;filtersearch+=`<li><div>${choice}</div></li>`}
else if(datalist[i].isAbilityFactor){let choice=`${datalist[i].transferRate}% : Special Ability Factor`;filtersearch+=`<li><div>${choice}</div></li>`}
else if(datalist[i].materials){let choice=`${datalist[i].transferRate}% : ${datalist[i].materials.map((mat) => mat.name).join(", ")}`;filtersearch+=`<li><div>${choice}</div></li>`}}}
filtersearch+=`</ul>
    </div>`;return filtersearch};const RADIO_BUTTON_TEMPLATE=({id,isChecked,description})=>`<label class="radiobutton-container">
        <input type="radio" name="${(id) ? id : `radio`}">
        <span class="checkmark" ${(isChecked) ? `checked` : ``}></span>
        <span>${(description) ? description : ``}</span>
    </label>`;const SELECTION_MENU_TEMPLATE=({type,affixesSelected,categories,datalist,isGlobalSearch,shouldUpslot,shouldSpread})=>{let isAffixSelection=type=='affixSelection';let isChoiceSelection=type=='choiceSelection';let isFormulaSheet=type=='formulaSheet';let layoutTemplate=`<div class="${(isAffixSelection) ? `affix-selection-container` : (isChoiceSelection) ? `choice-selection-container` : (isFormulaSheet) ? `formula-sheet-container` : ``} hidden" onclick="$(this).remove();">
        <div onclick="event.stopPropagation();">
            <div class="main-grid">
                <div class="title bold">${(isAffixSelection) ? `Choose Abilities` : (isChoiceSelection) ? `Choose Method of Making` : (isFormulaSheet) ? `Affixing Formula Sheet` : ``}</div>${(isChoiceSelection) ?
                `<div class="options">${(affixesSelected.length>1)?`
                    ${CHECKBOX_TEMPLATE({ label: `Affix By Upslotting`, description: `Using equipment with less slots to make gear with more slots`, isChecked: shouldUpslot })}`:``}
${CHECKBOX_TEMPLATE({label:`Use All Six Fodders`,description:`Makes it cheaper to produce the intermediary equipment`,isChecked:shouldSpread})}</div>` 
            : ``}<div class="content">`;if(isAffixSelection){layoutTemplate+=`<div>
                        <div class="title bold">Affixing Goal</div>
                        <div>`;for(var i=0;i<(new Fodder).CAPACITY;i++){layoutTemplate+=`<div class="affix${(affixesSelected[i]) ? `` : ` empty`}"${(affixesSelected[i]) ? ` title="${affixesSelected[i].effect}"` : ``}${(affixesSelected[i]) ? ` data-code="${affixesSelected[i].code}"` : ``}>
                                <i class="fa fa-trash"></i>
                                <span>${(affixesSelected[i]) ? `${affixesSelected[i].name}` : `&nbsp;`}</span>
                            </div>`}
layoutTemplate+=`</div>
                        <div class="title bold">Stats</div>
                        <div class="stats-viewer">
                        </div>
                    </div>
                    <div>
                        <div class="title bold">Choices</div>
                        ${FILTER_SEARCH_TEMPLATE({ categories: categories, datalist: datalist, isGlobalSearch: isGlobalSearch })}
                    </div>`}
else if(isChoiceSelection){if(affixesSelected&&Array.isArray(affixesSelected)){for(var i=0;i<affixesSelected.length;i++){if(!affixesSelected[i].code||datalist===undefined||datalist[affixesSelected[i].code]===undefined)continue;layoutTemplate+=`<div${(affixesSelected[i]) ? ` data-code="${affixesSelected[i].code}"` : ``}>
                        <div class="title bold">Affix ${i + 1}</div>
                        <div>
                            <div class="affix"${(affixesSelected[i]) ? ` title="${affixesSelected[i].effect}"` : ``}${(affixesSelected[i]) ? ` data-code="${affixesSelected[i].code}"` : ``}>
                                <span>${(affixesSelected[i]) ? `${affixesSelected[i].name}` : `&nbsp;`}</span>
                            </div>
                        </div>
                        <div class="title bold">Choices</div>
                        ${FILTER_SEARCH_TEMPLATE({ categories: categories, datalist: datalist[affixesSelected[i].code], isGlobalSearch: isGlobalSearch })}
                    </div>`}}}
else if(isFormulaSheet){layoutTemplate+=`<div>
                        <div class="title bold">Ability</div>
                        ${FILTER_SEARCH_TEMPLATE({ categories: categories, datalist: datalist, isGlobalSearch: isGlobalSearch })}
                    </div>
                    <div>
                        <div class="title bold">How To Make</div>
                        <div class="search-results-container"></div>
                    </div>`}
layoutTemplate+=`</div>
                <div>
                    ${(isAffixSelection || isChoiceSelection) ? `<div><div class="cancel-button">Cancel</div></div>` : ``}<div>
                        <div class="confirm-button${(isAffixSelection || isChoiceSelection) ? ` disabled">Confirm`: `">Close`}</div>
                    </div>
                </div>
            </div>
        </div>
    </div>`;return layoutTemplate}
const AFFIX_SELECTION_VIEW_TEMPLATE=({affixesSelected,categories,abilityList,isGlobalSearch})=>{return SELECTION_MENU_TEMPLATE({type:'affixSelection',affixesSelected:affixesSelected,categories:categories,datalist:abilityList,isGlobalSearch:isGlobalSearch})};const CHOICE_SELECTION_VIEW_TEMPLATE=({affixesSelected,choices,isGlobalSearch,shouldUpslot,shouldSpread})=>{return SELECTION_MENU_TEMPLATE({type:'choiceSelection',affixesSelected:affixesSelected,datalist:choices,isGlobalSearch:isGlobalSearch,shouldUpslot:shouldUpslot,shouldSpread:shouldSpread})};const FORMULA_SHEET_VIEW_TEMPLATE=({categories,abilityList,isGlobalSearch})=>{return SELECTION_MENU_TEMPLATE({type:'formulaSheet',categories:categories,datalist:abilityList,isGlobalSearch:isGlobalSearch})};const timeData={chooseAffixStartTime:(new Date()).getTime(),chooseMethodStartTime:(new Date()).getTime(),formulaSheetStartTime:(new Date()).getTime(),shareLinkStartTime:(new Date()).getTime()};const stringData={affixingSrc:''}
class ViewController{constructor(assistant){this.NEWLY_PRODUCED_TIMEOUT_IN_MILLI=3000;this.filters=[];this.affixesSelected=[];this.choicesSelected=[];this.assistant=assistant;let funcs=Object.getOwnPropertyNames(ViewController.prototype);for(var i=0;i<funcs.length;i++){let prop=funcs[i];if(prop=='constructor')continue;if(typeof this[prop]=='function'){Object.defineProperty(this,prop,{enumerable:!0,value:this[prop],writable:!1})}}
this.shouldUpslot=!0;this.shouldSpread=!0;this.newlyProducedTimeout=null;this.isIncludingFoddersIntrinsicFactor=!1}
setup(){$("#editor").children().first().panzoom({which:(window.opera||navigator.userAgent.match(/Opera|OPR\//))?2:3,minScale:0.1,maxScale:2,onChange:this.updateConnections});$("#editor").on('wheel',function(e){e.preventDefault();var delta=e.delta||e.originalEvent.wheelDelta;var zoomOut=delta?delta<0:e.originalEvent.deltaY>0;$("#editor").children().first().panzoom('zoom',zoomOut,{increment:0.1,animate:!1,focal:e})});$('#panzoomreset').click({viewcontroller:this},function(e){e.preventDefault();e.data.viewcontroller.centerViewAtNode('#goal');try{gaRequests.send('main','buttonClick',{'View Type':'Main View','Interface Type':'Center At Goal Button','Number Of Interfaces Used':1})}
catch(e){}});$('#startnew').click(()=>{VIEW_CONTROLLER.affixesSelected=VIEW_CONTROLLER.assistant.getGoalAffixes();VIEW_CONTROLLER.assistant.reset();stringData.affixingSrc='Setting Goal';VIEW_CONTROLLER.setAffixSelectionView(!0,!0)});$('#openformulasheet').click(()=>VIEW_CONTROLLER.openFormulaSheet(!0));$('#getlink').click(()=>VIEW_CONTROLLER.openGetLinkView(!0));$('#themeswitch').click(()=>{if($('html').hasClass('theme--default')){$('html').removeClass('theme--default').addClass('theme--bright');try{gaRequests.send('main','buttonClick',{'View Type':'Main View','Interface Type':'Switch Theme Button','Number Of Interfaces Used':1,'Theme Type':'Bright Theme','Number of Themes Used':1})}
catch(e){}}
else if($('html').hasClass('theme--bright')){$('html').removeClass('theme--bright').addClass('theme--default');try{gaRequests.send('main','buttonClick',{'View Type':'Main View','Interface Type':'Switch Theme Button','Number Of Interfaces Used':1,'Theme Type':'Default Theme','Number of Themes Used':1})}
catch(e){}}});$('div#reportbug').click(()=>{try{gaRequests.send('main','buttonClick',{'View Type':'Main View','Interface Type':'Report Bug Button','Number Of Interfaces Used':1})}
catch(e){}})}
setActiveFodder(e){let vc=(this instanceof ViewController)?this:(e.data&&e.data.viewcontroller)?e.data.viewcontroller:undefined;if(!(vc instanceof ViewController))return;let found=vc.findFodderAndNodeByDOM(this);vc.assistant.setActiveFodder(found.fodder);vc.assistant.setActivePageTreeNode(found.pageTreeNode);vc.affixesSelected=found.fodder.affixes.slice(0);if(vc.assistant.pageTreeRoot==null||vc.assistant.pageTreeRoot==found.fodder){stringData.affixingSrc='Reproducing Goal';try{gaRequests.send('main','buttonClick',{'View Type':'Main View','Interface Type':'Reproduce Button','Number Of Interfaces Used':1})}
catch(e){}}
else if(found.fodder instanceof Fodder){if(found.fodder.connectedTo&&found.fodder.connectedTo instanceof Page){stringData.affixingSrc='Reproducing Intermediary Fodder';try{gaRequests.send('main','buttonClick',{'View Type':'Main View','Interface Type':'Reproduce Button','Number Of Interfaces Used':1})}
catch(e){}}
else{stringData.affixingSrc='Producing Intermediary Fodder';try{gaRequests.send('main','buttonClick',{'View Type':'Main View','Interface Type':'Produce Button','Number Of Interfaces Used':1})}
catch(e){}}}
vc.openChoicesSelectionView(!0)}
findFodderAndNodeByDOM(fodderElem){let $elem=$(fodderElem);if(!$elem.hasClass('fodder'))$elem=$elem.parents('div.fodder');if($elem.length<=0||!(this.assistant.pageTreeRoot instanceof PageTreeNode))return;let indices=[];do{if($elem.length>0)indices.unshift($elem.index());$elem=$elem.parents('div.mgrid')}while($elem.length>0);indices.splice(0,1);let curr=this.assistant.pageTreeRoot;for(var i=0;i<indices.length-1;i++){curr=curr.children[indices[i]]}
let fodder=curr.page.fodders[indices[indices.length-1]];return{fodder:fodder,pageTreeNode:curr}}
findPageAndNodeByDOM(fodderElem){let $fodderElem=$(fodderElem);if(!$fodderElem.hasClass('fodder'))$fodderElem=$fodderElem.parents('div.fodder');let $elem=$(fodderElem);if(!$elem.hasClass('page'))$elem=$elem.parents('div.page');if($fodderElem.length<=0||$elem.length<=0||!(this.assistant.pageTreeRoot instanceof PageTreeNode))return;let indices=[];do{if($elem.length>0)indices.unshift($elem.index());$elem=$elem.parents('div.mgrid')}while($elem.length>0);indices.splice(0,1);let curr=this.assistant.pageTreeRoot;for(var i=0;i<indices.length-1;i++){curr=curr.children[indices[i]]}
return{fodder:curr.page.fodders[$fodderElem.index()],pageTreeNode:curr}}
findDOMByPage(page){if(!page||!(page instanceof Page)||!(this.assistant.pageTreeRoot instanceof PageTreeNode))return;let trackingRoute=this.assistant.pageTreeRoot.find(page);let $curr=$('.mgrid');if($curr.length<=0)return;for(var i=0;i<trackingRoute.length;i++){if(trackingRoute[i]instanceof Page&&$curr.length>0)
$curr=$($curr.find('div.page')[0]);else if(trackingRoute[i]instanceof PageTreeNode&&$curr.length>0){let pageTreeNode=trackingRoute[i];let next=trackingRoute[i+1];if(next&&next instanceof PageTreeNode){let indexOf=pageTreeNode.children.indexOf(next);$curr=$($curr[0]).children().last().children('.mgrid');$curr=$($curr[indexOf])}}}
return $curr}
setFilters(filters){if(filters&&Array.isArray(filters)){this.filters=filters.slice()}
return this}
setAffixSelectionView(bool,shouldAnimate){if(typeof bool!=='boolean')return;if($('div.choice-selection-container').length!=0){$('div.choice-selection-container').remove()}
if($('div.formula-sheet-container').length!=0){$('div.formula-sheet-container').remove()}
if($('div.link-container').length!=0){$('div.link-container').remove()}
let isVisible=$('div.affix-selection-container').length!=0;if(bool){if(!isVisible){$('body').append(AFFIX_SELECTION_VIEW_TEMPLATE({affixesSelected:this.affixesSelected,categories:this.filters,abilityList:this.assistant.data.abilityList}));if(shouldAnimate){$('div.affix-selection-container').animate({},10,function(){timeData.chooseAffixStartTime=(new Date()).getTime();$('div.affix-selection-container').removeClass('hidden');try{gaRequests.send('main','buttonClick',{'View Type':'Main View','Interface Type':'Set Goal Button','Number Of Interfaces Used':1})}
catch(e){}})}
else $('div.affix-selection-container').removeClass('hidden');$('div.affix-selection-container li > div').click({viewcontroller:this},this.selectAbility);$('div.affix-selection-container div.affix > i').click({viewcontroller:this},this.selectAbility);$('div.affix-selection-container div.cancel-button').click({viewcontroller:this},function({data}){$('div.affix-selection-container').remove();try{gaRequests.send('affix','cancel',{'View Type':'Choose Affix View','Transaction Type':'Cancel','Time Spent In View':((new Date()).getTime()-timeData.chooseAffixStartTime)/1000})}
catch(e){}});$('div.affix-selection-container div.confirm-button').click({viewcontroller:this},function({data}){if($('div.affix-selection-container div.confirm-button.disabled').length>0)return;try{gaRequests.send('affix','confirm',{'View Type':'Choose Affix View','Transaction Type':'Confirm','Time Spent In View':((new Date()).getTime()-timeData.chooseAffixStartTime)/1000})}
catch(e){}
data.viewcontroller.openChoicesSelectionView(!1);$('div.choice-selection-container div.cancel-button').click({viewcontroller:data.viewcontroller},({data})=>{data.viewcontroller.setAffixSelectionView(!0,!1);try{gaRequests.send('method','cancel',{'View Type':'Choose Method of Making View','Transaction Type':'Cancel','Time Spent In View':((new Date()).getTime()-timeData.chooseMethodStartTime)/1000})}
catch(e){}})});this.updateAffixSelectionView()}}
else{if(isVisible){$('div.affix-selection-container').remove()}}
return this}
openChoicesSelectionView(shouldAnimate,e){let vc=(this instanceof ViewController)?this:(e.data&&e.data.viewcontroller)?e.data.viewcontroller:undefined;if(!(vc instanceof ViewController))return;if(vc.affixesSelected.length<=0)return;vc.isIncludingFoddersIntrinsicFactor=!1;if($('div.affix-selection-container').length!=0){$('div.affix-selection-container').remove()}
if($('div.choice-selection-container').length!=0){$('div.choice-selection-container').remove()}
if($('div.formula-sheet-container').length!=0){$('div.formula-sheet-container').remove()}
if($('div.link-container').length!=0){$('div.link-container').remove()}
let choices=vc.assistant.getChoicesForAffixes(vc.affixesSelected);vc.choicesSelected.splice(0,vc.choicesSelected.length);for(var i=0;i<vc.affixesSelected.length;i++){vc.choicesSelected.push(null)}
if(vc.assistant.activeFodder&&vc.assistant.activeFodder.specialAbilityFactor){let factor=vc.assistant.activeFodder.specialAbilityFactor;vc.affixesSelected.push(factor);vc.isIncludingFoddersIntrinsicFactor=!0;let factorChoices=vc.assistant.affixDB[factor.code].choices;for(var i=0;i<factorChoices.length;i++){if(factorChoices[i].isAbilityFactor){choices[factor.code]=[factorChoices[i]];vc.choicesSelected.push(null);break}}}
$('body').append(CHOICE_SELECTION_VIEW_TEMPLATE({affixesSelected:vc.affixesSelected,choices:choices,shouldUpslot:vc.shouldUpslot,shouldSpread:vc.shouldSpread}));if(shouldAnimate){$('div.choice-selection-container').animate({},10,function(){timeData.chooseMethodStartTime=(new Date()).getTime();$('div.choice-selection-container').removeClass('hidden')})}
else $('div.choice-selection-container').removeClass('hidden');$('div.choice-selection-container div.options > div.checkbox-container:first-child').click({viewcontroller:vc},vc.setShouldUpslot);$('div.choice-selection-container div.options > div.checkbox-container:last-child').click({viewcontroller:vc},vc.setShouldSpread);$('div.choice-selection-container li > div').click({viewcontroller:vc},vc.selectChoice);$('div.choice-selection-container div.cancel-button').click((e)=>{$('div.choice-selection-container').remove();try{gaRequests.send('method','cancel',{'View Type':'Choose Method of Making View','Transaction Type':'Cancel','Time Spent In View':((new Date()).getTime()-timeData.chooseMethodStartTime)/1000})}
catch(e){}});$('div.choice-selection-container div.confirm-button').click({viewcontroller:vc},vc.produceFodderFromChoices)}
openFormulaSheet(shouldAnimate,e){let vc=(this instanceof ViewController)?this:(e.data&&e.data.viewcontroller)?e.data.viewcontroller:undefined;if(!(vc instanceof ViewController))return;if($('div.affix-selection-container').length!=0){$('div.affix-selection-container').remove()}
if($('div.choice-selection-container').length!=0){$('div.choice-selection-container').remove()}
if($('div.formula-sheet-container').length!=0){$('div.formula-sheet-container').remove()}
if($('div.link-container').length!=0){$('div.link-container').remove()}
$('body').append(FORMULA_SHEET_VIEW_TEMPLATE({categories:VIEW_CONTROLLER.filters,abilityList:ASSISTANT.data.abilityList}));if(shouldAnimate){$('div.formula-sheet-container').animate({},10,function(){timeData.formulaSheetStartTime=(new Date()).getTime();$('div.formula-sheet-container').removeClass('hidden');try{gaRequests.send('main','buttonClick',{'View Type':'Main View','Interface Type':'Formula Sheet Button','Number Of Interfaces Used':1})}
catch(e){}})}
else $('div.formula-sheet-container').removeClass('hidden');$('div.formula-sheet-container li > div').click({viewcontroller:vc},vc.updateFormulaSheetSearchResults);$('div.formula-sheet-container div.confirm-button').click(()=>{$('div.formula-sheet-container').remove();try{gaRequests.send('formula','close',{'View Type':'Formula Sheet View','Transaction Type':'Close','Time Spent In View':((new Date()).getTime()-timeData.formulaSheetStartTime)/1000})}
catch(e){}})}
openGetLinkView(shouldAnimate,e){let vc=(this instanceof ViewController)?this:(e.data&&e.data.viewcontroller)?e.data.viewcontroller:undefined;if(!(vc instanceof ViewController))return;if($('div.affix-selection-container').length!=0){$('div.affix-selection-container').remove()}
if($('div.choice-selection-container').length!=0){$('div.choice-selection-container').remove()}
if($('div.formula-sheet-container').length!=0){$('div.formula-sheet-container').remove()}
if($('div.link-container').length!=0){$('div.link-container').remove()}
$('body').append(LINK_TEMPLATE({link:decodeURI(window.location.href),linkToSim:vc.assistant.toURL(!0)}));if(shouldAnimate){$('div.link-container').animate({},10,function(){timeData.shareLinkStartTime=(new Date()).getTime();$('div.link-container').removeClass('hidden');try{gaRequests.send('main','buttonClick',{'View Type':'Main View','Interface Type':'Share Link Button','Number Of Interfaces Used':1})}
catch(e){}})}
else $('div.link-container').removeClass('hidden');$('div.link-container div.copy-button:first-child').click(()=>{let copyText=$('div.link-container input[type=text]')[0];if(!copyText)return;copyText.select();document.execCommand("copy");try{gaRequests.send('share','buttonClick',{'View Type':'Share Link View','Link Type':'Link to Assistant','Number Of Links Used':1})}
catch(e){}});$($('div.link-container div.copy-button')[1]).find('a').click(()=>{try{gaRequests.send('share','buttonClick',{'View Type':'Share Link View','Link Type':'Link to Simulator','Number Of Links Used':1})}
catch(e){}});$('div.link-container div.confirm-button').click(()=>{$('div.link-container').remove();try{gaRequests.send('share','close',{'View Type':'Share Link View','Transaction Type':'Close','Time Spent In View':((new Date()).getTime()-timeData.shareLinkStartTime)/1000})}
catch(e){}})}
updateFromURL(){let urlParams=window.location.search;if(urlParams==''){this.displayWelcomeScreen(!0);return}
else{this.displayWelcomeScreen(!1)}
urlParams=urlParams.substring(1,urlParams.length);urlParams=decodeURIComponent(urlParams);urlParams=VIEW_CONTROLLER.assistant.decodeURLParams(urlParams);if(!this.assistant||!(this.assistant instanceof Assistant))return;let hasSuceeded=this.assistant.loadFromURLParams(urlParams);if(hasSuceeded)this.updateView()}
updateView(e){let vc=(this instanceof ViewController)?this:(e.data)?e.data.viewcontroller:undefined;if(!(vc instanceof ViewController))return;if(!vc.assistant||!vc.assistant.pageTreeRoot||!(vc.assistant.pageTreeRoot instanceof PageTreeNode))return;vc.assistant.calcSuccessRates();$('#mastercontainer').empty().append(PAGE_TREE_NODE_TEMPLATE({pageTreeNode:vc.assistant.pageTreeRoot}));vc.regenerateConnections();$('div.fodder').hover(spotlightIn,spotlightOut);$('div.produce-button:not(.disabled)').click({viewcontroller:this},this.setActiveFodder);$('.boost-container input[type=checkbox]').change({viewcontroller:this},(e)=>{let $elem=$(e.currentTarget);for(var i=0;i<$elem.length;i++){let{fodder}=e.data.viewcontroller.findPageAndNodeByDOM($elem[i]);if(fodder)fodder.setSameGear($elem.prop('checked'))}
e.data.viewcontroller.updateURLParams();e.data.viewcontroller.updateView();try{gaRequests.send('main','checkboxCheck',{'View Type':'Main View','Interface Type':'Same Equipment Checkbox','Number Of Interfaces Used':1})}
catch(e){}});$('.boost-container > div.dropdown-container:not(:last-child) select').change({viewcontroller:this},(e)=>{let $elem=$(e.currentTarget);for(var i=0;i<$elem.length;i++){let index=$($elem[i]).find('option:selected').index();let{fodder}=e.data.viewcontroller.findPageAndNodeByDOM($elem[i]);if(fodder)fodder.setRateBoostIdx(index)}
e.data.viewcontroller.updateURLParams();e.data.viewcontroller.updateView();try{gaRequests.send('main','dropdownChange',{'View Type':'Main View','Interface Type':'Ability Rate Boost Dropdown','Number Of Interfaces Used':1})}
catch(e){}});$('.boost-container > div.dropdown-container:last-child select').change({viewcontroller:this},(e)=>{let $elem=$(e.currentTarget);for(var i=0;i<$elem.length;i++){let index=$($elem[i]).find('option:selected').index();let{fodder}=e.data.viewcontroller.findPageAndNodeByDOM($elem[i]);if(fodder)fodder.setPotentialIdx(index)}
e.data.viewcontroller.updateURLParams();e.data.viewcontroller.updateView();try{gaRequests.send('main','dropdownChange',{'View Type':'Main View','Interface Type':'Equipment Potential Dropdown','Number Of Interfaces Used':1})}
catch(e){}});vc.displayWelcomeScreen(!1);return this}
displayWelcomeScreen(shouldOpen){if(shouldOpen){if($('div.welcome').length>0)return;if($('#editor').length>0)$(WELCOME_VIEW()).insertAfter($('#editor'));else $('body').prepend($(WELCOME_VIEW()))}
else{$('div.welcome').remove()}}
updateURLParams(){if(!this.assistant||!(this.assistant instanceof Assistant))return;let oldURL='?'+decodeURIComponent(window.location.search.substring(1,window.location.search.length));let newURL=this.assistant.toURL();if(newURL==oldURL)return;window.history.pushState("test","Title",newURL)}
centerViewAtNode(selector){let $node=$(selector);if($node.length<=0)return;let pos=$node.position();let $container=$("#editor").children().first();let zoomScale=$container.panzoom('getMatrix')[0];let toNodeCenter={left:($node.outerWidth()/2)+(Math.round(pos.left)/zoomScale),top:($node.outerHeight()/2)+(Math.round(pos.top)/zoomScale)}
let newpos={left:($(window).outerWidth()/2)-toNodeCenter.left-(zoomScale-1)*(toNodeCenter.left-($container.outerWidth()/2)),top:($(window).outerHeight()/2)-toNodeCenter.top-(zoomScale-1)*(toNodeCenter.top-($container.outerHeight()/2))}
$container.panzoom('pan',newpos.left,newpos.top,{animate:!1,});return this}
regenerateConnections(){let $connectables=$('div[data-conn]');$(`connection`).remove();for(var i=0;i<$connectables.length;i++){let connectableA=$connectables[i];for(var j=0;j<$connectables.length;j++){let connectableB=$connectables[j];if(connectableA.dataset.conn==connectableB.dataset.conn&&$(connectableA).hasClass('fodder')&&$(connectableB).hasClass('page')){$(connectableA).add(connectableB).connections();$('connection:not([data-conn])').attr('data-conn',connectableA.dataset.conn)}}}
$(`connection`).insertAfter('#editor');return this}
updateConnections(){$('div.page, div.fodder').connections('update')}
selectAbility(e){let vc=(this instanceof ViewController)?this:(e.data&&e.data.viewcontroller)?e.data.viewcontroller:undefined;if(!(vc instanceof ViewController))return;if($(this).hasClass('selected')||$(this).parent().hasClass('affix')){let that=this;if($(this).parent().hasClass('affix'))that=$(this).parent()[0];vc.affixesSelected.splice(vc.affixesSelected.indexOf(vc.assistant.affixDB[$(that).attr('data-code')].abilityRef),1);if(!$(this).parent().hasClass('affix')){try{gaRequests.send('affix','select',{'View Type':'Choose Affix View','Selection Type':'Deselecting','Selection Medium':($('div.affix-selection-container input.searchbar').val()!='')?'Search Bar':'Manual','Number Of Abilities Selected':1})}
catch(e){}}
else{try{gaRequests.send('affix','select',{'View Type':'Choose Affix View','Selection Type':'Deselecting','Selection Medium':'Affixes Selected','Number Of Abilities Selected':1})}
catch(e){}}}
else{let selAffix=vc.assistant.affixDB[$(this).attr('data-code')].abilityRef;let hadConflict=!1;for(var i=0;i<vc.affixesSelected.length;i++){if(vc.assistant.hasConflict(vc.affixesSelected[i],selAffix)){vc.affixesSelected[i]=selAffix;hadConflict=!0;break}}
if(!hadConflict&&vc.affixesSelected.length<8){vc.affixesSelected.push(vc.assistant.affixDB[$(this).attr('data-code')].abilityRef);try{gaRequests.send('affix','select',{'View Type':'Choose Affix View','Selection Type':'Selecting','Selection Medium':($('div.affix-selection-container input.searchbar').val()!='')?'Search Bar':'Manual','Number Of Abilities Selected':1})}
catch(e){}}}
vc.updateAffixSelectionView()}
selectChoice(e){let vc=(this instanceof ViewController)?this:(e.data&&e.data.viewcontroller)?e.data.viewcontroller:undefined;if(!(vc instanceof ViewController))return;if($(this).hasClass('option-disabled'))return;if($(this).hasClass('selected')){let $divDataCode=$(this).parents('div[data-code]');if($divDataCode.length>0){let code=$divDataCode.data('code');let affix=vc.assistant.affixDB[code];if(affix&&affix.abilityRef){let arrIdx=vc.affixesSelected.indexOf(affix.abilityRef);if(arrIdx>=0&&arrIdx<vc.affixesSelected.length&&vc.choicesSelected[arrIdx]!==undefined){vc.choicesSelected[arrIdx]=null;try{gaRequests.send('method','select',{'View Type':'Choose Method of Making View','Selection Type':'Deselecting','Selection Medium':($($('div.choice-selection-container input.searchbar')[arrIdx]).val()!='')?'Search Bar':'Manual','Number Of Abilities Selected':1})}
catch(e){}}}}}
else{let $divDataCode=$(this).parents('div[data-code]');if($divDataCode.length>0){let code=$divDataCode.data('code');let affix=vc.assistant.affixDB[code];if(affix&&affix.choices&&Array.isArray(affix.choices)){let choices=affix.choices;let choiceIdx=$(this).parent().index();if(choiceIdx>=0&&choiceIdx<choices.length){let choice=choices[choiceIdx];let arrIdx=vc.affixesSelected.indexOf(affix.abilityRef);if(arrIdx>=0&&arrIdx<vc.affixesSelected.length&&vc.choicesSelected[arrIdx]!==undefined){vc.choicesSelected[arrIdx]=choice;try{gaRequests.send('method','select',{'View Type':'Choose Method of Making View','Selection Type':'Selecting','Selection Medium':($($('div.choice-selection-container input.searchbar')[arrIdx]).val()!='')?'Search Bar':'Manual','Number Of Abilities Selected':1})}
catch(e){}}}}}}
vc.updateChoiceSelectionView()}
produceFodderFromChoices(e){let vc=(this instanceof ViewController)?this:(e.data&&e.data.viewcontroller)?e.data.viewcontroller:undefined;if(!(vc instanceof ViewController))return;if(vc.choicesSelected.includes(null))return;let choices=vc.choicesSelected;let targetNumSlots=vc.affixesSelected.length-(vc.isIncludingFoddersIntrinsicFactor?1:0)-((vc.shouldUpslot&&vc.affixesSelected.length>1)?1:0);let newPage=vc.assistant.buildPageForChoices(choices,vc.shouldSpread,targetNumSlots);if(!newPage){console.warn('Attempted to produce a new page with choices %o, but produced page was %o',choices,newPage);return}
if(!vc.assistant.hasActivePageTreeNode()){if(vc.assistant.validateAffixes(vc.affixesSelected)){vc.assistant.setGoal(vc.affixesSelected)}}
vc.assistant.activeFodder.setAddAbilityInUse(choices);vc.assistant.updateConnection({fodder:vc.assistant.activeFodder,page:newPage});vc.updateURLParams();vc.updateView();let $page=vc.findDOMByPage(vc.assistant.activePageTreeNode.page)
vc.centerViewAtNode($page);$page=vc.findDOMByPage(newPage);spotlightIn($page);if(vc.newlyProducedTimeout)clearTimeout(vc.newlyProducedTimeout);vc.newlyProducedTimeout=setTimeout(function(){if(spotlight===$page)spotlightOut($page)},vc.NEWLY_PRODUCED_TIMEOUT_IN_MILLI);$('div.choice-selection-container').remove();try{gaRequests.send('method','confirm',{'View Type':'Choose Method of Making View','Transaction Type':'Confirm','Time Spent In View':((new Date()).getTime()-timeData.chooseMethodStartTime)/1000,'Affix Type (Upslot)':(vc.shouldUpslot)?'Upslot':'Same Slot','Affix Type (Spread)':(vc.shouldSpread)?'Spread':'Compact','Affix Origin':stringData.affixingSrc,'Number Of Affix Requests':1})}
catch(e){}}
updateAffixSelectionView(){$(`div.affix-selection-container li > div`).removeClass('selected');let slots=$('div.affix-selection-container div.affix');let allStats={};for(var i=0;i<slots.length;i++){if(this.affixesSelected[i]){$(slots[i]).attr('title',this.affixesSelected[i].effect.replace(/<br>/g,' ')).attr('data-code',this.affixesSelected[i].code).removeClass('empty').find('span').text(this.affixesSelected[i].name);$(`div.affix-selection-container li > div[data-code="${this.affixesSelected[i].code}"]`).addClass('selected');let stats=this.affixesSelected[i].effect.split('<br>');if(stats.length==1)stats=stats[0].split(',');for(var j=0;j<stats.length;j++){let stat=stats[j];if(/(.)*\([\+-][0-9]+\)/.test(stat)){stat=stat.split('(');let key=stat[0];let value=parseInt(stat[1].slice(0,stat[1].length-1));if(allStats[key]){allStats[key]+=value}
else{allStats[key]=value}}
else{allStats[stat]=''}}}
else{$(slots[i]).attr('title','').attr('data-code','').addClass('empty').find('span').html('&nbsp;')}}
if(allStats.ALL){if(allStats['S-ATK'])allStats['S-ATK']+=allStats.ALL;else allStats['S-ATK']=allStats.ALL;if(allStats['R-ATK'])allStats['R-ATK']+=allStats.ALL;else allStats['R-ATK']=allStats.ALL;if(allStats['T-ATK'])allStats['T-ATK']+=allStats.ALL;else allStats['T-ATK']=allStats.ALL;if(allStats['S-DEF'])allStats['S-DEF']+=allStats.ALL;else allStats['S-DEF']=allStats.ALL;if(allStats['R-DEF'])allStats['R-DEF']+=allStats.ALL;else allStats['R-DEF']=allStats.ALL;if(allStats['T-DEF'])allStats['T-DEF']+=allStats.ALL;else allStats['T-DEF']=allStats.ALL;if(allStats.DEX)allStats.DEX+=allStats.ALL;else allStats.DEX=allStats.ALL;delete allStats.ALL}
let statsViewer=$(`div.affix-selection-container div.stats-viewer`);if(statsViewer.length>0){statsViewer.empty();for(var key in allStats){let value=allStats[key];if(value!='')value=' ('+((value>=0)?'+':'')+value+')';statsViewer.append(`<div class="stat">${key + value}</div>`)}}
if(this.affixesSelected.length<=0||(this.affixesSelected.length==1&&this.assistant.isSpecialAbility(this.affixesSelected[0]))){$(`div.affix-selection-container .confirm-button`).addClass('disabled')}
else{$(`div.affix-selection-container .confirm-button`).removeClass('disabled')}}
updateChoiceSelectionView(){$(`div.choice-selection-container li > div`).removeClass('selected');$(`div.choice-selection-container div.affix`).removeClass('selected');for(var i=0;i<this.affixesSelected.length;i++){let choices=this.assistant.affixDB[this.affixesSelected[i].code].choices;let choiceIdx=choices.indexOf(this.choicesSelected[i]);let optionsList=$(`div.choice-selection-container div[data-code=${this.affixesSelected[i].code}] li > div`);if(choiceIdx>=0&&choiceIdx<optionsList.length){$(optionsList[choiceIdx]).addClass('selected').parents('div[data-code]').find('div.affix').addClass('selected')}
let searchResults=$(`div.choice-selection-container div.filtersearchcontainer`)[i];if(searchResults){for(var j=0;j<choices.length;j++){let $option=$($(searchResults).find('li > div')[j]);if($option.hasClass('selected'))continue;if($option.length>0){$option.removeClass('option-disabled');let testChoices=this.choicesSelected.slice(0);testChoices[i]=choices[j];if(!this.assistant.doAffixesHavePossiblePlacement({choices:testChoices,targetNumSlots:this.affixesSelected.length-((this.affixesSelected.length>1&&this.shouldUpslot)?1:0)}))
$option.addClass('option-disabled')}}}}
$(`div.choice-selection-container .confirm-button`).removeClass('disabled');if(this.choicesSelected.includes(null)){$(`div.choice-selection-container .confirm-button`).addClass('disabled')}}
updateFormulaSheetSearchResults(e){let vc=(this instanceof ViewController)?this:(e&&e.data)?e.data.viewcontroller:undefined;if(!(vc instanceof ViewController))return;let choices=vc.assistant.getChoicesForAffixes(vc.assistant.affixDB[$(this).attr('data-code')].abilityRef);if(!choices||!choices[$(this).attr('data-code')])return;$(`div.formula-sheet-container li > div`).removeClass('selected');$(this).addClass('selected');let $ref=$('div.formula-sheet-container .search-results-container');$ref.nextAll().remove();$(FILTER_SEARCH_TEMPLATE({categories:VIEW_CONTROLLER.filters,datalist:choices[$(this).attr('data-code')]})).insertAfter($ref);try{gaRequests.send('formula','select',{'View Type':'Formula Sheet View','Selection Type':'Selecting','Selection Medium':($($('div.formula-sheet-container input.searchbar')[0]).val()!='')?'Search Bar':'Manual','Number Of Abilities Selected':1})}
catch(e){}}
setShouldUpslot(e){let vc=(this instanceof ViewController)?this:(e&&e.data)?e.data.viewcontroller:undefined;if(!(vc instanceof ViewController))return;let $checkbox=$('div.choice-selection-container div.options div.checkbox-container:first-child input[type=checkbox]');vc.shouldUpslot=$checkbox.prop('checked');vc.updateChoiceSelectionView()}
setShouldSpread(e){let vc=(this instanceof ViewController)?this:(e&&e.data)?e.data.viewcontroller:undefined;if(!(vc instanceof ViewController))return;let $checkbox=$('div.choice-selection-container div.options div.checkbox-container:last-child input[type=checkbox]');vc.shouldSpread=$checkbox.prop('checked');vc.updateChoiceSelectionView()}}
var timeout;var spotlight;function spotlightIn(ev){if(ev.currentTarget)ev=ev.currentTarget;if(timeout)clearTimeout(timeout);let connNum=$(ev).attr('data-conn');timeout=setTimeout(function(){if(connNum){$('div[data-conn]').removeClass('spotlight');$('div.page, connection').removeClass('despotlight');let $t=$('div[data-conn='+connNum+']');$('div.page, connection:not([data-conn='+connNum+'])').not($t).addClass('despotlight');$t.addClass('spotlight');spotlight=ev}},500)}
function spotlightOut(ev){if(ev.currentTarget)ev=ev.currentTarget;if(timeout)clearTimeout(timeout);let connNum=$(ev).attr('data-conn');if(connNum){let $t=$('div[data-conn='+connNum+']');$('div.page, connection:not([data-conn='+connNum+'])').not($t).removeClass('despotlight');$t.removeClass('spotlight');spotlight=undefined}}
class AffixDataParser{constructor(){let funcs=Object.getOwnPropertyNames(AffixDataParser.prototype);for(var i=0;i<funcs.length;i++){let prop=funcs[i];if(prop=='constructor')continue;if(typeof this[prop]=='function'){Object.defineProperty(this,prop,{enumerable:!0,value:this[prop],writable:!1})}}}
parse(data){if(typeof data!=='object')return null;let abilityDB={};if(data.abilityList){for(var i=0;i<data.abilityList.length;i++){let thisAbility=data.abilityList[i];if(abilityDB[thisAbility.code]){}
else{abilityDB[thisAbility.code]={abilityRef:thisAbility,choices:[]}}}}
if(data.abilityList){for(var i=0;i<data.abilityList.length;i++){let thisAbility=data.abilityList[i];if(!thisAbility.extend)continue;let reachedMax=!1;for(j=0;j<thisAbility.extend.length;j++){if(abilityDB[thisAbility.code]){if(thisAbility.extend[j]==0)continue;let newChoice={type:reachedMax?3:0,transferRate:thisAbility.extend[j],materials:[]}
if(thisAbility.require&&abilityDB[thisAbility.require]){newChoice.materials.push(abilityDB[thisAbility.require].abilityRef)}
for(k=0;k<=j;k++){newChoice.materials.push(thisAbility)}
abilityDB[thisAbility.code].choices.push(newChoice);if(thisAbility.extend[j]>=100)reachedMax=!0}
else{}}}}
if(data.abilityList){for(var i=0;i<data.abilityList.length;i++){let thisAbility=data.abilityList[i];if(!thisAbility.generate)continue;let srcAbility=data.abilityList[i-1];let reachedMax=!1;for(var j=0;j<thisAbility.generate.length;j++){if(abilityDB[thisAbility.code]){if(thisAbility.generate[j]<=0)continue;let newChoice={type:reachedMax?3:1,transferRate:thisAbility.generate[j],materials:[]}
if(thisAbility.require&&abilityDB[thisAbility.require]){newChoice.materials.push(abilityDB[thisAbility.require].abilityRef)}
for(var k=0;k<j+2;k++){newChoice.materials.push(srcAbility)}
abilityDB[thisAbility.code].choices.push(newChoice);if(j==0&&data.boostPoint&&data.boostPoint.photon&&data.boostPoint.photon.create){for(var statusString in data.boostPoint.photon.create){if(thisAbility.status==parseInt(statusString)){let index=parseInt(thisAbility.code[thisAbility.code.length-1]);let additionalRate=data.boostPoint.photon.create[thisAbility.status][index];if(additionalRate<=0)continue;let additionalChoice={type:2,transferRate:additionalRate,materials:[abilityDB.WA01.abilityRef].concat(newChoice.materials)}
abilityDB[thisAbility.code].choices.push(additionalChoice)}}}
if(data.boostPoint&&data.boostPoint.mutation1&&data.boostPoint.mutation1.create){for(var statusString in data.boostPoint.mutation1.create){if(thisAbility.status==parseInt(statusString)){let index=parseInt(thisAbility.code[thisAbility.code.length-1]);let additionalRate=data.boostPoint.mutation1.create[thisAbility.status][index];if(additionalRate<=0)continue;let additionalChoice={type:2,transferRate:Math.min(100,newChoice.transferRate+additionalRate),materials:[abilityDB.OA01.abilityRef].concat(newChoice.materials)}
abilityDB[thisAbility.code].choices.push(additionalChoice)}}}
if(data.boostPoint&&data.boostPoint.mutation2&&data.boostPoint.mutation2.create){for(var statusString in data.boostPoint.mutation2.create){if(thisAbility.status==parseInt(statusString)){let index=parseInt(thisAbility.code[thisAbility.code.length-1]);let additionalRate=data.boostPoint.mutation2.create[thisAbility.status][index];if(additionalRate<=0)continue;let additionalChoice={type:2,transferRate:Math.min(100,newChoice.transferRate+additionalRate),materials:[abilityDB.OA02.abilityRef].concat(newChoice.materials)}
abilityDB[thisAbility.code].choices.push(additionalChoice)}}}
if(j<thisAbility.generate.length&&thisAbility.generate[j+1]<=thisAbility.generate[j])reachedMax=!0}
else{}}}}
if(data.extendAbility){for(var i=0;i<data.extendAbility.length;i++){let extAbility=data.extendAbility[i];if(extAbility.ref&&extAbility.success&&extAbility.base){let refs=[];if(Array.isArray(extAbility.ref)){refs=extAbility.ref}
else if(typeof extAbility.ref=="string"&&(extAbility.ref=="$$"||abilityDB[extAbility.ref])){refs.push(extAbility.ref)}
for(var j=0;j<refs.length;j++){let abilityCode=refs[j];let possibleMaterials=[];let numChoices=0;for(var m=0;m<extAbility.base.length;m++){if(extAbility.base[m].endsWith("*")){let abilityArr=[];let regex=extAbility.base[m].slice(0,extAbility.base[m].length-1);for(var abilityName in abilityDB){if(abilityName.startsWith(regex)){abilityArr.push(abilityDB[abilityName].abilityRef)}}
if(abilityArr.length>0){possibleMaterials.push(abilityArr);if(numChoices==0)numChoices=abilityArr.length;else numChoices*=abilityArr.length}
else{}}
else if(abilityDB[extAbility.base[m]]){possibleMaterials.push([abilityDB[extAbility.base[m]].abilityRef]);if(numChoices==0)numChoices=1}
else{}}
let allChoicesOfMaterials=allPossibleCases(possibleMaterials);for(var n=0;n<allChoicesOfMaterials.length;n++){let newChoice={transferRate:extAbility.success,materials:allChoicesOfMaterials[n],type:0}
if(abilityCode=="$$"){let code=allChoicesOfMaterials[n][allChoicesOfMaterials[n].length-1].code;if(code=="TG31"&&newChoice.transferRate==100)continue;if(abilityDB[code]){abilityDB[code].choices.push(newChoice)}
else{}}
else{abilityDB[abilityCode].choices.push(newChoice)}}}}
else{}}}
if(data.abilityList){for(var i=0;i<data.abilityList.length;i++){let thisAbility=data.abilityList[i];if(thisAbility.rel&&thisAbility.extup&&data.boostPoint&&data.boostPoint[thisAbility.rel]){for(var code in abilityDB){for(var k=0;k<thisAbility.extup.length;k++){if(code.startsWith(thisAbility.extup[k])){for(var m=0;m<abilityDB[code].choices.length;m++){let thisChoice=abilityDB[code].choices[m];switch(thisChoice.type){case 0:if(data.boostPoint[thisAbility.rel].extend&&data.boostPoint[thisAbility.rel].extend.hasOwnProperty(abilityDB[code].abilityRef.status)){let index=parseInt(code[thisAbility.code.length-1]);if(index>=data.boostPoint[thisAbility.rel].extend[abilityDB[code].abilityRef.status].length){index=0}
let additionalRate=data.boostPoint[thisAbility.rel].extend[abilityDB[code].abilityRef.status][index];let max=100;if(typeof additionalRate==='object'&&additionalRate.max&&additionalRate.boost){max=additionalRate.max;additionalRate=additionalRate.boost}
if(thisChoice.transferRate>=max)continue;if(additionalRate<=0)continue;let additionalChoice={transferRate:Math.min(max,thisChoice.transferRate+additionalRate),materials:[thisAbility].concat(thisChoice.materials)}
abilityDB[code].choices.push(additionalChoice)}
break;case 1:if(data.boostPoint[thisAbility.rel].create&&data.boostPoint[thisAbility.rel].create.hasOwnProperty(abilityDB[code].abilityRef.status)){let index=parseInt(code[thisAbility.code.length-1]);if(index>=data.boostPoint[thisAbility.rel].create[abilityDB[code].abilityRef.status].length){index=0}
let additionalRate=data.boostPoint[thisAbility.rel].create[abilityDB[code].abilityRef.status][index];let max=100;if(typeof additionalRate==='object'&&additionalRate.max&&additionalRate.boost){max=additionalRate.max;additionalRate=additionalRate.boost}
if(thisChoice.transferRate>=max)continue;if(additionalRate<=0)continue;let additionalChoice={transferRate:Math.min(max,thisChoice.transferRate+additionalRate),materials:[thisAbility].concat(thisChoice.materials)}
abilityDB[code].choices.push(additionalChoice)}
break}}}}}}}}
if(data.abilityList&&data.optionList&&data.optionList.additional){for(var i=0;i<data.optionList.additional.length;i++){let additionalChoice=data.optionList.additional[i];if(!additionalChoice.name||!additionalChoice.id||!additionalChoice.value||!additionalChoice.extend||!additionalChoice.effect)continue;for(var j=data.abilityList.length;j>=0;j--){if(data.abilityList[j]&&data.abilityList[j].name==additionalChoice.name){if(abilityDB[data.abilityList[j].code]){abilityDB[data.abilityList[j].code].choices.push({transferRate:additionalChoice.extend,materials:[],isAddAbilityItem:!0,name:additionalChoice.id,value:additionalChoice.value})}
break}}}}
if(data.abilityList&&data.abilityFactor&&Array.isArray(data.abilityFactor)){for(var i=0;i<data.abilityFactor.length;i++){let factorChoice=data.abilityFactor[i];if(!factorChoice.name)continue;for(var j=data.abilityList.length;j>=0;j--){if(data.abilityList[j]&&data.abilityList[j].name==factorChoice.name){if(abilityDB[data.abilityList[j].code]){abilityDB[data.abilityList[j].code].choices.push({transferRate:100,materials:[],isAbilityFactor:!0,abilityRef:abilityDB[data.abilityList[j].code].abilityRef})}
break}}}}
for(code in abilityDB){let thisAbility=abilityDB[code];thisAbility.choices.sort(function(a,b){if(a.transferRate<=b.transferRate)
return 1;if(a.transferRate>b.transferRate)
return-1;return 0})}
for(code in abilityDB){let thisAbility=abilityDB[code];thisAbility.choices=thisAbility.choices.filter(function(choice){return choice.type!=3})}
return abilityDB;function allPossibleCases(arr){if(arr.length===0){return[]}
else if(arr.length===1){var result=[];for(var i=0;i<arr[0].length;i++){result.push([arr[0][i]])}
return result}
else{var result=[];var allCasesOfRest=allPossibleCases(arr.slice(1));for(var c in allCasesOfRest){for(var i=0;i<arr[0].length;i++){result.push([arr[0][i]].concat(allCasesOfRest[c]))}}
return result}}}
printAbilityDB(abilityDB){let out="";for(var abilityName in abilityDB){if(!abilityDB[abilityName])continue;out+="<h4>"+abilityDB[abilityName].abilityRef.name+"</h4>";for(var i=0;i<abilityDB[abilityName].choices.length;i++){out+="<li> rate: "+abilityDB[abilityName].choices[i].transferRate+", materials: ";for(var j=0;j<abilityDB[abilityName].choices[i].materials.length;j++){out+=abilityDB[abilityName].choices[i].materials[j].name+", "}
out+="</li>"}}
var output=$(`<p style="position:absolute; overflow:scroll; width:100%; height:100%;
            background-color:black; z-index:999999; margin:0; padding:1em;">`);var done=$('<button style="position:fixed; right:0; margin:1em; padding:1em;">X</button>');output[0].innerHTML=out;output.prepend(done);done.click(function(){this.parentNode.parentNode.removeChild(this.parentNode)});document.body.appendChild(output[0]);console.log(out)}}
const MAX_NUM_AFFIX=8;const MAX_NUM_FODDERS=6;const RECEPTOR_REGEX=/(X[A-G][0-9]{2})/;const AFFIX_REL_SOUL="soul";class Assistant{constructor(data){this.affixDB=(new AffixDataParser()).parse(data);this.data=data;this.rateBoostOptions=[];this.potentialOptions=[];this.junkCodes=["ZA01","ZB01","ZC01","ZD01","ZE01","ZF01","ZG01","ZH01","ZI01"];this.SIMULATOR_WEBSITE="https://arks-layer.com/abilitysim/";let funcs=Object.getOwnPropertyNames(Assistant.prototype);for(var i=0;i<funcs.length;i++){let prop=funcs[i];if(prop=='constructor')continue;if(typeof this[prop]=='function'){Object.defineProperty(this,prop,{enumerable:!0,value:this[prop],writable:!1})}}
this.pageTreeRoot=null;this.activePageTreeNode=null;this.activeFodder=null}
reset(){this.activePageTreeNode=null;this.activeFodder=null}
setGoal(affixes){if(!this.validateAffixes(affixes))return;this.pageTreeRoot=(new PageTreeNode(!0)).setPage((new Page()).addFodders((new Fodder()).addAffixes(affixes).setGoal(!0))).addRateBoostOptions(this.getRateBoostOptions()).addPotentialOptions(this.getPotentialOptions());this.setActivePageTreeNode(this.pageTreeRoot);this.setActiveFodder(this.pageTreeRoot.page.fodders[0])}
setActiveFodder(fodder){if(!(fodder instanceof Fodder)||!this.pageTreeRoot||this.pageTreeRoot.find(fodder).length<=0)return!1;this.activeFodder=fodder;return!0}
setActivePageTreeNode(pageTreeNode){if(!(pageTreeNode instanceof PageTreeNode)||!this.pageTreeRoot||this.pageTreeRoot.find(pageTreeNode).length<=0)return!1;this.activePageTreeNode=pageTreeNode;return!0}
hasActiveFodder(){return this.pageTreeRoot&&!this.pageTreeRoot.find(this.activeFodder).length>0}
hasActivePageTreeNode(){return this.pageTreeRoot&&this.pageTreeRoot.find(this.activePageTreeNode).length>0}
getRateBoostOptions(){if(!this.data||!this.data.optionList||!this.data.optionList.support||!Array.isArray(this.data.optionList.support))return null;if(this.rateBoostOptions.length>0)return this.rateBoostOptions;let options=this.data.optionList.support;for(var i=0;i<options.length;i++){if(!options[i]||!options[i].id)continue;this.rateBoostOptions.push(options[i])}
return this.rateBoostOptions}
getPotentialOptions(){if(!this.data||!this.data.optionList||!this.data.optionList.potential||!Array.isArray(this.data.optionList.potential))return null;if(this.potentialOptions.length>0)return this.potentialOptions;let options=this.data.optionList.potential;for(var i=0;i<options.length;i++){if(!options[i]||!options[i].id)continue;this.potentialOptions.push(options[i])}
return this.potentialOptions}
validateAffixes(affixes){if(!this.affixDB)return!1;if(affixes){for(var i=0;i<affixes.length;i++){let affix=affixes[i];if(!affix.code||!this.affixDB[affix.code]){return!1}}}
return!0}
getChoicesForAffixes(affixes){if(!affixes)return;if(!Array.isArray(affixes)){if(!affixes.code)return;affixes=[affixes]}
let choices={};for(var i=0;i<affixes.length;i++){let affix=affixes[i];if(affix&&affix.code&&this.affixDB[affix.code]){choices[affix.code]=this.affixDB[affix.code].choices.slice()}
else{console.warn(`Could not find choices for affix %o because it was not found in the database.`,affix);try{let msg=(ASSISTANT.pageTreeRoot)?ASSISTANT.pageTreeRoot.toString():`root={${ASSISTANT.pageTreeRoot}}`;gaRequests.sendException(msg)}catch(e){}}}
return choices}
getUniqueAffixesForCostCheck(choicesArray){if(!choicesArray||!Array.isArray(choicesArray)||choicesArray.length<=0||choicesArray.length>MAX_NUM_AFFIX||!this.affixDB)return null;let affixes=[];for(var i=0;i<choicesArray.length;i++){if(choicesArray[i].materials){for(var j=0;j<choicesArray[i].materials.length;j++){if(!affixes.includes(choicesArray[i].materials[j]))
affixes.push(choicesArray[i].materials[j])}}}
return affixes}
getAffixInstancesInvolvedIn(choicesArray){if(!choicesArray||!Array.isArray(choicesArray)||choicesArray.length<=0||choicesArray.length>MAX_NUM_AFFIX||!this.affixDB)return null;let lists=[];for(var i=0;i<choicesArray.length;i++){if(choicesArray[i]&&choicesArray[i].materials){lists.push(choicesArray[i].materials.slice())}}
return this.unionOfListsWithDuplicates(lists)}
buildPageForChoices(choices,shouldSpread,targetNumSlots){let affixes=this.getAffixInstancesInvolvedIn(choices);if(!affixes||!Array.isArray(affixes)||!this.affixDB)return null;let numSpecialAbilityFactor=0;for(var i=0;i<choices.length;i++){let choice=choices[i];if(!choice)continue;if(choice.isAbilityFactor)numSpecialAbilityFactor++}
if(affixes.length<=0&&numSpecialAbilityFactor<=0)return null;let page=this.buildPageInPyramid(affixes,targetNumSlots);if(page==null){try{let msg=`@Assistant.buildPageForChoices => page created was null from { affixes: [ `;if(affixes&&affixes.length){for(var i=0;i<affixes.length;i++){if(affixes[i]&&affixes[i].code)msg+=`${affixes[i]}, `;else msg+=`NoCode={${affixes[i]}}, `}}
else msg+=`NotDefined={${affixes}}`;msg+=` ], targetNumSlots: ${targetNumSlots} /// pageTreeRoot => `;msg+=(ASSISTANT.pageTreeRoot)?ASSISTANT.pageTreeRoot.toString():`root={${ASSISTANT.pageTreeRoot}}`;gaRequests.sendException(msg)}catch(e){}}
if(shouldSpread){this.spreadFodders(page,targetNumSlots)}
let numFoddersNeeded=3;let hasFodderWithinTargetSlot=!1;for(var i=0;i<page.size();i++){if(page.fodders[i].size()>0)numFoddersNeeded--;if(!hasFodderWithinTargetSlot&&page.fodders[i].size()<=targetNumSlots)
hasFodderWithinTargetSlot=!0}
if(!hasFodderWithinTargetSlot&&numFoddersNeeded<=0)numFoddersNeeded=1;for(var i=0;i<page.size();i++){if(numFoddersNeeded>0&&page.fodders[i].size()==0){page.fodders[i].addAffixes(this.affixDB[this.junkCodes[0]].abilityRef);numFoddersNeeded--}}
for(var i=0;i<page.size();i++){let fodder=page.fodders[i];if(fodder.size()>0||i<=numSpecialAbilityFactor){let junks=[];for(var j=0;j<this.junkCodes.length;j++){let junk=this.affixDB[this.junkCodes[j]].abilityRef;if(fodder.affixes.includes(junk))continue;if(fodder.size()+junks.length<targetNumSlots)junks.push(junk);else break}
if(junks.length>0)fodder.addAffixes(junks)}}
for(var i=0;i<page.size();i++){let fodderA=page.fodders[i];if(!(fodderA instanceof Fodder))continue;for(var k=0;k!=i&&k<page.size();k++){let fodderB=page.fodders[k];if(!(fodderB instanceof Fodder))continue;for(var j=0;j<fodderA.size();j++){let affixA=fodderA.affixes[j];for(var m=0;m<fodderB.size();m++){let affixB=fodderB.affixes[m];let arr;arr=fodderA.affixes.slice(0);arr.splice(j,1);let placementA1=this.getPlacement(affixA,(new Fodder()).addAffixes(arr),-1,targetNumSlots);if(!placementA1)continue;let placementB2=this.getPlacement(affixB,(new Fodder()).addAffixes(arr),-1,targetNumSlots);if(!placementB2)continue;arr=fodderB.affixes.slice(0);arr.splice(m,1);let placementB1=this.getPlacement(affixB,(new Fodder()).addAffixes(arr),-1,targetNumSlots);if(!placementB1)continue;let placementA2=this.getPlacement(affixA,(new Fodder()).addAffixes(arr),-1,targetNumSlots);if(!placementA2)continue;let totalNumOverlaps1=0;if(placementA1.overlap)totalNumOverlaps1+=placementA1.data.overlaps-placementA1.data.numOverlapsInvolvingReceptor;if(placementB1.overlap)totalNumOverlaps1+=placementB1.data.overlaps-placementB1.data.numOverlapsInvolvingReceptor;let totalNumOverlaps2=0;if(placementA2.overlap)totalNumOverlaps2+=placementA2.data.overlaps-placementA2.data.numOverlapsInvolvingReceptor;if(placementB2.overlap)totalNumOverlaps2+=placementB2.data.overlaps-placementB2.data.numOverlapsInvolvingReceptor;let compoundRate1=placementA1.data.compoundRate*placementB1.data.compoundRate;let compoundRate2=placementA2.data.compoundRate*placementB2.data.compoundRate;if(totalNumOverlaps2>totalNumOverlaps1){fodderA.affixes.splice(j,1);fodderB.affixes.splice(m,1);fodderA.affixes.push(affixB);fodderB.affixes.push(affixA)}}}}}
let choicesWithFactor=[];for(var i=0;i<choices.length;i++){let choice=choices[i];if(choice.isAbilityFactor&&choice.abilityRef){choicesWithFactor.unshift(choice)}}
for(var i=0;i<page.size();i++){if(choicesWithFactor.length<=0)break;let fodder=page.fodders[i];let transferablesData=this.getTransferablesAndNonTransferables(fodder.affixes);let hasNonTransferable=transferablesData.hasNonTransferable;if(!hasNonTransferable){fodder.setSpecialAbilityFactor(choicesWithFactor.pop().abilityRef)}}
let foddersToRemove=[];for(var i=0;i<page.size();i++){if(page.fodders[i].size()==0)foddersToRemove.push(page.fodders[i])}
page.removeFodders(foddersToRemove);return page}
produceFromChoices({fodder,affixChoices,shouldSpread=!1,targetNumSlot}){if(!(fodder instanceof Fodder)||!affixChoices||!Array.isArray(affixChoices)||(typeof shouldSpread!=='boolean')||(typeof targetNumSlot!=='number')||targetNumSlot<=0)return!1;let producedPage=buildPageForChoices(affixChoices,shouldSpread,targetNumSlot);if(!producedPage)return!1;fodder.connectTo(producedPage);return!0}
buildPageInPyramid(affixes,targetNumSlots){let page=new Page();let fodders=[]
for(var i=0;i<page.CAPACITY;i++){fodders.push(new Fodder())}
page.addFodders(fodders);let pageStartIdx=0;let transferablesData=this.getTransferablesAndNonTransferables(affixes);let nontransferables=transferablesData.nontransferables;let transferables=transferablesData.transferables;for(var i=0;i<nontransferables.length;i++){if(pageStartIdx>=page.fodders.length){}
page.fodders[pageStartIdx].addAffixes([nontransferables[i]]);pageStartIdx++}
var that=this;transferables.sort(function(affixA,affixB){if(that.affixDB[affixA.code]&&that.affixDB[affixA.code].choices[0]&&that.affixDB[affixB.code]&&that.affixDB[affixB.code].choices[0]){let maxRateA=that.affixDB[affixA.code].choices[0].transferRate;let maxRateB=that.affixDB[affixB.code].choices[0].transferRate;return maxRateB-maxRateA}
else{return-1}});for(var i=0;i<transferables.length;i++){let affix=transferables[i];let placements=this.getPossiblePlacements(affix,page,pageStartIdx);let overlaps=placements.overlaps;let nooverlaps=placements.nooverlaps;let hasAdded=!1;if(overlaps.length>0){overlaps.sort((a,b)=>b.compoundRate-a.compoundRate);for(var j=0;j<overlaps.length;j++){if(page.fodders[overlaps[j].index]&&page.fodders[overlaps[j].index].affixes.length<targetNumSlots){page.fodders[overlaps[j].index].addAffixes([affix]);hasAdded=!0;break}}}
if(!hasAdded&&nooverlaps.length>0){nooverlaps.sort((a,b)=>b.compoundRate-a.compoundRate);for(var j=0;j<nooverlaps.length;j++){if(page.fodders[nooverlaps[j].index]&&page.fodders[nooverlaps[j].index].affixes.length<targetNumSlots){page.fodders[nooverlaps[j].index].addAffixes([affix]);hasAdded=!0;break}}}
else{return null}}
return page}
enforceSlotNumOnAll(page,targetNumSlots){if(!page||!(page instanceof Page)||typeof targetNumSlots!=='number')return;let numFodders=page.size();let numAbilities=0;let hasFodderThatExceedsSlots=!1;for(var i=0;i<page.size();i++){let fodder=page.fodders[i];numAbilities+=fodder.size();if(fodder.size()>targetNumSlots)hasFodderThatExceedsSlots=!0}
if(!hasFodderThatExceedsSlots)return;if(numAbilities>(numFodders*(new Fodder()).CAPACITY))return}
spreadFodders(page,targetNumSlots,targetNumFodders){if(!(page instanceof Page)||typeof targetNumSlots!=='number')return null;if(targetNumSlots<=0)targetNumSlots=1;if(targetNumSlots>(new Fodder()).CAPACITY)targetNumSlots=(new Fodder()).CAPACITY;targetNumFodders=(typeof targetNumFodders==='number')?targetNumFodders:page.size();if(targetNumFodders<=1)return null;if(targetNumFodders>page.size())targetNumFodders=page.size();page.fodders.sort((fodderA,fodderB)=>fodderB.size()>fodderA.size());for(var i=targetNumFodders;i<(new Page()).CAPACITY;i++){if(page.fodders[i]&&(page.fodders[i]instanceof Fodder)&&page.fodders[i].size()>0)return null}
while(Math.abs(page.fodders[0].size()-page.fodders[page.size()-1].size())>1){let fodder=page.fodders[0];let boundaryIdx=-1;for(var i=1;i<targetNumFodders;i++){if(Math.abs(fodder.size()-page.fodders[i].size())>1){boundaryIdx=i;break}}
if(boundaryIdx<0)break;fodder.affixes.sort((affixA,affixB)=>{let fakeFodder=(new Fodder()).addAffixes([fodder.affixes.slice(fodder.affixes.indexOf(affixA),1)]);let placementA=this.getPlacement(affixA,fakeFodder,0,targetNumSlots);fakeFodder=(new Fodder()).addAffixes([fodder.affixes.slice(fodder.affixes.indexOf(affixB),1)]);let placementB=this.getPlacement(affixB,fakeFodder,0,targetNumSlots);if(placementA&&placementB)return placementA.numOverlaps-placementB.numOverlaps;else if(!placementA)return-1;else return 1});let toPageIdx=-1;let fromAffixIdx=-1;let maxOverlapCount=0;for(var i=0;i<fodder.size();i++){let affix=fodder.affixes[i];for(var j=boundaryIdx;j<targetNumFodders;j++){let placement=this.getPlacement(affix,page.fodders[j],0,targetNumSlots);if(placement&&(placement.data.overlaps-placement.data.numOverlapsInvolvingReceptor)>=maxOverlapCount){maxOverlapCount=(placement.data.overlaps-placement.data.numOverlapsInvolvingReceptor);toPageIdx=j;fromAffixIdx=i}}}
if(toPageIdx>=0&&fromAffixIdx>=0){let affixToMove=fodder.affixes.splice(fromAffixIdx,1)[0];page.fodders[toPageIdx].addAffixes([affixToMove])}
else{break}
page.fodders.sort((fodderA,fodderB)=>fodderB.size()>fodderA.size())}
let minNumAffixes=0;while(page.fodders[0].affixes.length!=minNumAffixes){for(var j=targetNumFodders-1;j>=0;j--){let fodder=page.fodders[j];if(fodder.affixes.length==minNumAffixes){for(var k=0;k<j;k++){if(Math.abs(page.fodders[j].affixes.length-page.fodders[k].affixes.length)<=1){break}
else if(k+1<j&&page.fodders[k].affixes.length>page.fodders[k+1].affixes.length&&this.getPlacement(page.fodders[k].affixes[page.fodders[k].affixes.length-1],page.fodders[j],j,targetNumSlots)){fodder.addAffixes([page.fodders[k].affixes.pop()]);break}}}
else{minNumAffixes++;break}}}
return page}
getPlacement(affix,fodder,pageIdx,targetNumSlots){if(!(fodder instanceof Fodder)||(targetNumSlots&&fodder.affixes.length>=targetNumSlots)){return!1}
let affixCodePreffix=affix.code.slice(0,2);if(this.affixDB[affix.code]){if(this.affixDB[affix.code].choices){let affixChoices=this.affixDB[affix.code].choices;let numOverlaps=0;let numOverlapsInvolvingReceptor=0;let hasConflict=!1;let receptorRateFactor=1;let compoundRate=1;for(var k=0;k<fodder.affixes.length;k++){var fodderAffix=fodder.affixes[k];if(fodderAffix.code.startsWith(affixCodePreffix)||this.testExcludePattern(affix,fodderAffix)||RECEPTOR_REGEX.test(affix.code)||RECEPTOR_REGEX.test(fodderAffix.code)){hasConflict=!0;break}
if(this.affixDB[fodderAffix.code]&&this.affixDB[fodderAffix.code].choices){let fodderAffixChoices=this.affixDB[fodderAffix.code].choices;let isOverlap=!1;let hasReceptor=!1;let affixChoices=this.affixDB[affix.code].choices;let rateMultiplier=1;for(var m=0;m<fodderAffixChoices.length;m++){var fodderAffixChoice=fodderAffixChoices[m];for(var n=0;n<fodderAffixChoice.materials.length;n++){let choiceAffix=fodderAffixChoice.materials[n];if(RECEPTOR_REGEX.test(choiceAffix.code))hasReceptor=!0;if(affix==choiceAffix)isOverlap=!0}
if(isOverlap){compoundRate*=fodderAffixChoice.transferRate/100;if(hasReceptor)receptorRateFactor*=fodderAffixChoice.transferRate/100}}
if(!isOverlap){let m=0;let n=0;while(m<fodderAffixChoices.length&&n<affixChoices.length){let fodderAffixChoice=fodderAffixChoices[m];let choice=affixChoices[n];let combined=this.getAffixInstancesInvolvedIn([choice,fodderAffixChoice]);if(combined.length<choice.length+fodderAffixChoice){isOverlap=!0;rateMultiplier*=(fodderAffixChoice.transferRate/100);if(combined.materials.filter((mat)=>mat.code.match(RECEPTOR_REGEX))){hasReceptor=!0}
break}
if(m>=fodderAffixChoices.length-1)n++;else if(n>=affixChoices.length-1)m++;else{if((n==m)||(m-n==1))n++;else if(n-m==1){m++;n--}}}}
if(isOverlap){numOverlaps++;compoundRate*=rateMultiplier;if(hasReceptor){numOverlapsInvolvingReceptor++;receptorRateFactor*=rateMultiplier}}
else{if(fodderAffixChoices[0])
compoundRate*=fodderAffixChoices[0].transferRate/100}}}
if(hasConflict)return!1;let newItem={index:pageIdx,overlaps:numOverlaps,numOverlapsInvolvingReceptor:numOverlapsInvolvingReceptor,compoundRate:compoundRate}
if(numOverlaps>0){if(affix.rel==AFFIX_REL_SOUL&&numOverlapsInvolvingReceptor>0){if(receptorRateFactor==1){return{overlap:!0,data:newItem}}
else{return{overlap:!1,data:newItem}}}
else{return{overlap:!0,data:newItem}}}
else{return{overlap:!1,data:newItem}}}
else{return!1}}}
getPossiblePlacements(affix,page,pageStartIdx,targetNumSlots){let placements={overlaps:[],nooverlaps:[],compoundRates:[]}
for(var j=pageStartIdx;j<page.fodders.length;j++){let placement=this.getPlacement(affix,page.fodders[j],j,targetNumSlots);if(placement){if(placement.overlap)placements.overlaps.push(placement.data);else placements.nooverlaps.push(placement.data);placements.compoundRates.push(placement.data.compoundRate)}}
return placements}
unionOfListsWithDuplicates(lists){lists=lists.slice();let union=[];for(var i=0;i<lists.length;i++){union=union.concat(lists[i]);for(var j=i+1;j<lists.length;j++){for(var m=0;m<lists[i].length;m++){if(lists[j].includes(lists[i][m])){lists[j].splice(lists[j].indexOf(lists[i][m]),1)}}}}
return union}
hasConflict(affixA,affixB){return affixB.code.startsWith(affixA.code.slice(0,2))||this.testExcludePattern(affixA,affixB)}
testExcludePattern(affixA,affixB){if(!this.data||!this.data.excludePattern||!affixA||!affixB||!affixA.code||!affixB.code||!this.data.excludePattern.select)return!0;let codeA=affixA.code;let codeB=affixB.code;let patterns=this.data.excludePattern.select;for(var i=0;i<patterns.length;i++){if(!Array.isArray(patterns[i]))patterns[i]=[patterns[i]];let checkA=!1;let checkB=!1;for(var j=0;j<patterns[i].length;j++){if(patterns[i][j].endsWith('*'))
patterns[i][j]=patterns[i][j].slice(0,patterns[i][j].length-1);if(codeA.startsWith(patterns[i][j]))checkA=!0;if(codeB.startsWith(patterns[i][j]))checkB=!0}
if(checkA&&checkB){return!0}}
return!1}
doAffixesHavePossiblePlacement({choices,targetNumSlots=(new Fodder()).CAPACITY,targetNumFodders=(new Page()).CAPACITY}){if(targetNumSlots<=0||targetNumFodders<=0)return!1;let numSpecialAbilityFactor=0;for(var i=0;i<choices.length;i++){let choice=choices[i];if(!choice)continue;if(choice.isAbilityFactor)numSpecialAbilityFactor++}
if(numSpecialAbilityFactor>targetNumFodders){return!1}
let affixes=this.getAffixInstancesInvolvedIn(choices);if(!affixes||!Array.isArray(affixes))return!1;let transferablesData=this.getTransferablesAndNonTransferables(affixes);let numDuplPerTransferable=transferablesData.numDuplPerTransferable;let numNontransferables=transferablesData.numNontransferables;if(numNontransferables+numSpecialAbilityFactor>targetNumFodders){return!1}
if(affixes.length-numNontransferables>(targetNumFodders-numNontransferables)*targetNumSlots){return!1}
for(var codeA in numDuplPerTransferable){let numConflicts=numDuplPerTransferable[codeA];for(var codeB in numDuplPerTransferable){if(codeA==codeB)continue;let preffixCodeA=codeA.match(/^[A-Z]{2,}/)[0];if(!preffixCodeA)preffixCodeA="-1";if(codeB.startsWith(preffixCodeA)||this.testExcludePattern({code:codeA},{code:codeB})){numConflicts+=numDuplPerTransferable[codeB]}}
if(numConflicts>targetNumFodders-numNontransferables){return!1}}
return!0}
getTransferablesAndNonTransferables(affixes){let numDuplPerTransferable={};let nontransferables=[]
let transferables=[];for(var i=0;i<affixes.length;i++){let affix=affixes[i];if(!affix.code)continue;if(this.affixDB[affix.code]&&this.affixDB[affix.code].choices&&!this.isSpecialAbility(affix)&&(this.affixDB[affix.code].choices.length<=0||(this.affixDB[affix.code].choices.length==1&&this.affixDB[affix.code].choices[0].isAbilityFactor))){nontransferables.push(affix)}
else{transferables.push(affix);numDuplPerTransferable[affix.code]=(numDuplPerTransferable[affix.code]||0)+1}}
return{numNontransferables:nontransferables.length,hasNonTransferable:nontransferables.length!=0,numDuplPerTransferable:numDuplPerTransferable,nontransferables:nontransferables,transferables:transferables}}
isSpecialAbility(affix){if(!this.data||!this.data.optionList||!this.data.optionList.additional||!affix||!affix.name)return!1;for(var key in this.data.optionList.additional){let entry=this.data.optionList.additional[key];if(entry.name&&entry.name==affix.name)return!0}
return!1}
numSpecialAbilitiesIn(affixes){let num=0;for(var i=0;i<affixes.length;i++){if(this.isSpecialAbility(affixes[i]))num++}
return num}
toURL(isForSimulator){if(!this.pageTreeRoot){if(isForSimulator){return this.SIMULATOR_WEBSITE}
else{return''}}
if(isForSimulator&&this.pageTreeRoot.size()>0){return this.SIMULATOR_WEBSITE+'#!'+this.pageTreeRoot.children[0].toURL(isForSimulator)}
else{return'?'+this.encodeURLParams(this.pageTreeRoot.toURL())}}
updateConnection({fodder,page}){if(!(fodder instanceof Fodder)||!(page instanceof Page)||this.pageTreeRoot.find(page).length>0)return!1;let trackingRoute=this.pageTreeRoot.find(fodder);if(trackingRoute.length>=3&&trackingRoute[trackingRoute.length-3]instanceof PageTreeNode){let pageTreeNode=trackingRoute[trackingRoute.length-3];if(fodder.hasConnection()&&fodder.connectedTo!==page){let pageTrackingRoute=this.pageTreeRoot.find(fodder.connectedTo);if(pageTrackingRoute.length>=2&&pageTrackingRoute[pageTrackingRoute.length-2]instanceof PageTreeNode){let pageConnTo=pageTrackingRoute[pageTrackingRoute.length-2];pageTreeNode.removePageTreeNodes(pageConnTo)}
else return!1}
fodder.connectTo(page);pageTreeNode.addPageTreeNodes((new PageTreeNode()).setPage(page));fodder.affixIndicesFromFactor=[];for(var i=0;i<page.size();i++){let fodderInPage=page.fodders[i];if(fodderInPage.specialAbilityFactor&&fodder.affixes.includes(fodderInPage.specialAbilityFactor)){fodder.affixIndicesFromFactor.push(fodder.affixes.indexOf(fodderInPage.specialAbilityFactor))}}
return!0}
return!1}
getGoalAffixes(){if(this.pageTreeRoot&&this.pageTreeRoot instanceof PageTreeNode&&this.pageTreeRoot.page&&this.pageTreeRoot.page.fodders&&this.pageTreeRoot.page.fodders[0]&&this.pageTreeRoot.page.fodders[0].affixes&&Array.isArray(this.pageTreeRoot.page.fodders[0].affixes))
return this.pageTreeRoot.page.fodders[0].affixes.slice(0);else return[]}
calcSuccessRates(){this.calcSuccessRatesStartingAt(this.pageTreeRoot.page)}
calcSuccessRatesStartingAt(page){if(!page||!(page instanceof Page))return;let maxRate=(new Fodder()).MAX_RATE;let minRate=(new Fodder()).MIN_RATE;for(var i=0;i<page.size();i++){let fodder=page.fodders[i];if(!fodder.hasConnection())continue;let pageConn=fodder.connectedTo;let abilities=[];let minNumSlots=(new Fodder()).CAPACITY;for(var j=0;j<pageConn.size();j++){abilities=abilities.concat(pageConn.fodders[j].affixes);if(pageConn.fodders[j].size()<minNumSlots)
minNumSlots=pageConn.fodders[j].size()}
let abilitySuccessRates={};abilitySuccessRates.length=0;let fodderSuccessRate=-1;for(var k=0;k<fodder.size();k++){let affix=fodder.affixes[k];for(var m=0;m<this.affixDB[affix.code].choices.length;m++){let choice=this.affixDB[affix.code].choices[m];if(choice.isAddAbilityItem||affix.noEx){abilitySuccessRates[k]=Math.min(Math.max(choice.transferRate,minRate),maxRate);abilitySuccessRates.length++;if(fodderSuccessRate<0)fodderSuccessRate=(abilitySuccessRates[k]-minRate)/(maxRate-minRate);else fodderSuccessRate*=(abilitySuccessRates[k]-minRate)/(maxRate-minRate);break}
let isMatch=!0;if(!fodder.affixIndicesFromFactor.includes(k)){if(choice.isAbilityFactor){isMatch=!1}
else{let choiceCount=countOccurrences(choice.materials);let abilityCount=countOccurrences(abilities);for(var code in choiceCount){if(!abilityCount[code]||abilityCount[code]<choiceCount[code]){isMatch=!1;break}}}}
else{if(!choice.isAbilityFactor){isMatch=!1}}
if(isMatch){abilitySuccessRates[k]=Math.min(Math.max(Math.round(choice.transferRate),minRate),maxRate);if(fodder.size()>minNumSlots){let upslottingFactor=(fodder.size()>0)?this.data.extraSlot[fodder.size()-1][pageConn.size()>2]:100;upslottingFactor=(upslottingFactor-minRate)/(maxRate-minRate);abilitySuccessRates[k]=Math.min(Math.max(Math.round(abilitySuccessRates[k]*upslottingFactor),minRate),maxRate)}
if(fodder.isSameGear){let sameGearFactor=this.data.sameBonusBoost[(pageConn.size()>2)?2:1];abilitySuccessRates[k]=Math.min(Math.max(Math.round(abilitySuccessRates[k]*sameGearFactor),minRate),maxRate)}
if(fodder.rateBoostIdx>=0&&fodder.rateBoostIdx<fodder.rateBoostOptions.length){abilitySuccessRates[k]=Math.min(Math.max(this.data.optionList.support[fodder.rateBoostIdx].fn(abilitySuccessRates[k]),minRate),maxRate)}
if(fodder.potentialIdx>=0&&fodder.potentialIdx<fodder.potentialOptions.length){abilitySuccessRates[k]=Math.min(Math.max(this.data.optionList.potential[fodder.potentialIdx].fn(abilitySuccessRates[k]),minRate),maxRate)}
abilitySuccessRates.length++;if(fodderSuccessRate<0)fodderSuccessRate=(abilitySuccessRates[k]-minRate)/(maxRate-minRate);else fodderSuccessRate*=(abilitySuccessRates[k]-minRate)/(maxRate-minRate);break}
else{}}}
let overallSuccessRate=(abilitySuccessRates.length==fodder.size())?Math.min(Math.max(Math.round((fodderSuccessRate*(maxRate-minRate))+minRate),minRate),maxRate):-1;pageConn.setSuccessRate(overallSuccessRate);fodder.setSuccessRate(overallSuccessRate,abilitySuccessRates);this.calcSuccessRatesStartingAt(pageConn)}
function countOccurrences(abilities){var occurrences={};for(var i=0;i<abilities.length;i++){if(typeof occurrences[abilities[i].code]=="undefined"){occurrences[abilities[i].code]=1}else{occurrences[abilities[i].code]++}}
return occurrences}}
addPageTreeNodes(pageTreeNodes){if(this.activePageTreeNode&&(this.activePageTreeNode instanceof PageTreeNode)){this.activePageTreeNode.addPageTreeNodes(pageTreeNodes)}
return this}
removePageTreeNodes(pageTreeNodes){if(this.activePageTreeNode&&(this.activePageTreeNode instanceof PageTreeNode)){this.activePageTreeNode.removePageTreeNodes(pageTreeNodes)}
return this}
loadFromURLParams(params){if(!this.affixDB)return!1;let pagesData=params.split('/');let pages=[];for(var i=0;i<pagesData.length;i++){let pageData=pagesData[i];if(!pageData||pagesData=='')continue;let targetFodder=pageData.match(/r=(\*?[A-Z0-9]{4,}[.]?)*/g);if(!targetFodder||!targetFodder[0]||targetFodder=='')continue;let targetAffixes=targetFodder[0].match(/\*?[A-Z0-9]{4,}/g);if(!targetAffixes||targetAffixes.length<=0)continue;let pageAllFodders=pageData.match(/(s=(\*?[A-Z0-9]{4,}[.]?)*)((&[0-9])=(\*?[A-Z0-9]{4,}[.]?)*)*/g);let pageFoddersAffixes=[];for(var j=0;j<pageAllFodders.length;j++){let pageOneFodder=pageAllFodders[j];if(!pageOneFodder||pageOneFodder<=0)continue;let fodderAllAffixes=pageOneFodder.match(/(\*?[A-Z0-9]{4,}[.]?)+/g);if(!fodderAllAffixes||fodderAllAffixes<=0)continue;for(var k=0;k<fodderAllAffixes.length;k++){let fodderOneAffixes=fodderAllAffixes[k];let pageFodderAffixes=fodderOneAffixes.match(/\*?[A-Z0-9]{4,}/g);if(!pageFodderAffixes||pageFodderAffixes.length<=0)continue;pageFoddersAffixes.push(pageFodderAffixes)}}
let boosts=pageData.match(/o=([A-Z0-9]{3,}[.]?)*/g);if(!boosts||!boosts[0]||boosts=='')continue;boosts=boosts[0].match(/[A-Z0-9]{3,}/g);if(!boosts||!Array.isArray(boosts))boosts=[];let connDist=-1;let fodderIdx=-1;let dist=pageData.match(/d=[0-9]+.[0-9]+/);if(dist&&dist[0]){dist=dist[0].match(/[0-9]+/g);if(dist&&dist.length>1){connDist=parseInt(dist[0]);fodderIdx=parseInt(dist[1])}}
let connections=[];for(var j=0;j<pageFoddersAffixes.length;j++){let pageFodderAffixes=pageFoddersAffixes[j];connections.push(null);let newPageFodderAffixes=[];for(var k=0;k<pageFodderAffixes.length;k++){if(pageFodderAffixes[k].startsWith('*')){if(pageFodderAffixes.specialAbilityFactor)continue;let newCode=pageFodderAffixes[k].slice(1,pageFodderAffixes[k].length);if(this.affixDB[newCode]){newPageFodderAffixes.specialAbilityFactor=this.affixDB[newCode].abilityRef}}
else if(this.affixDB[pageFodderAffixes[k]]){newPageFodderAffixes.push(this.affixDB[pageFodderAffixes[k]].abilityRef)}}
pageFoddersAffixes[j]=newPageFodderAffixes}
for(var j=0;j<targetAffixes.length;j++){if(targetAffixes[j].startsWith('*')){targetAffixes[j]=targetAffixes[j].slice(1,targetAffixes[j].length)}
if(this.affixDB[targetAffixes[j]])
targetAffixes[j]=this.affixDB[targetAffixes[j]].abilityRef}
let affixIndicesFromFactor=[];for(var j=0;j<pageFoddersAffixes.length;j++){let fodderInPage=pageFoddersAffixes[j];if(fodderInPage.specialAbilityFactor&&targetAffixes.includes(fodderInPage.specialAbilityFactor)){affixIndicesFromFactor.push(targetAffixes.indexOf(fodderInPage.specialAbilityFactor))}}
pages.push({fodders:pageFoddersAffixes,target:targetAffixes,boosts:boosts,connections:connections,isConnected:!1,connDist:connDist,fodderIdx:fodderIdx,affixIndicesFromFactor:affixIndicesFromFactor})}
if(pages.length<=0||!pages[0].target||pages[0].target.length<=0)return!1;let goalPage=pages[0];for(var i=0;i<pages.length;i++){let pageA=pages[i];for(var j=0;j<pageA.fodders.length;j++){let fodderA=pageA.fodders[j];for(var k=0;k<pages.length;k++){if(k==i)continue;let pageB=pages[k];if(pageB&&!pageB.isConnected&&pageB.target){let isMatch=!0;if(fodderA.length==pageB.target.length){for(var m=0;m<pageB.target.length;m++){let targetAffix=pageB.target[m];if(!fodderA.includes(targetAffix)){isMatch=!1;break}}}
else isMatch=!1;if(isMatch&&pageB.connDist>=0&&pageB.fodderIdx>=0){if((k-i)!=pageB.connDist||j!=pageB.fodderIdx)
isMatch=!1}
if(isMatch){let idx=-1;if(j<3)idx=2*j;else idx=11-2*j;pageA.connections[idx]=pageB;pageB.isConnected=!0;break}}}}}
let filteredPages=[];let newPageTreeRoot=createPageTree(goalPage);if(!newPageTreeRoot||!(newPageTreeRoot instanceof PageTreeNode))return!1;this.setGoal(goalPage.target);this.pageTreeRoot.page.fodders[0].affixIndicesFromFactor=goalPage.affixIndicesFromFactor;this.pageTreeRoot.page.fodders[0].connectTo(newPageTreeRoot.page);if(this.data&&this.data.optionList&&this.data.optionList.support){for(var j=0;j<goalPage.boosts.length;j++){let boost=goalPage.boosts[j];for(var k=0;k<this.data.optionList.support.length;k++){let supportItem=this.data.optionList.support[k];if(supportItem.value==boost){this.pageTreeRoot.page.fodders[0].rateBoostIdx=k;break}}}}
if(this.data&&this.data.optionList&&this.data.optionList.additional){for(var j=0;j<goalPage.boosts.length;j++){let boost=goalPage.boosts[j];for(var k=0;k<this.data.optionList.additional.length;k++){let addAbilityItem=this.data.optionList.additional[k];if(addAbilityItem.value==boost){this.pageTreeRoot.page.fodders[0].addAbilityItemInUse={transferRate:addAbilityItem.extend,materials:[],isAddAbilityItem:!0,name:addAbilityItem.id,value:addAbilityItem.value}
for(var m=this.data.abilityList.length-1;m>=0;m--){let ability=this.data.abilityList[m];if(ability.name==addAbilityItem.name){this.pageTreeRoot.page.fodders[0].addAffixes(ability);break}}
break}}}}
if(this.data&&this.data.optionList&&this.data.optionList.potential){for(var j=0;j<goalPage.boosts.length;j++){let boost=goalPage.boosts[j];for(var k=0;k<this.data.optionList.potential.length;k++){let potential=this.data.optionList.potential[k];if(potential.value==boost){this.pageTreeRoot.page.fodders[0].potentialIdx=k;break}}}}
for(var j=0;j<goalPage.boosts.length;j++){let boost=goalPage.boosts[j];if(boost=='D01')this.pageTreeRoot.page.fodders[0].isSameGear=!1;else if(boost=='D02')this.pageTreeRoot.page.fodders[0].isSameGear=!0}
this.pageTreeRoot.addPageTreeNodes(newPageTreeRoot);return!0;function createPageTree(pageData){let fodders=[];for(var i=0;i<pageData.fodders.length;i++){let newFodder=(new Fodder()).addAffixes(pageData.fodders[i]);if(pageData.fodders[i].specialAbilityFactor){newFodder.setSpecialAbilityFactor(pageData.fodders[i].specialAbilityFactor)}
let idx=-1;if(i<3)idx=2*i;else idx=11-2*i;if(pageData.connections[idx]){newFodder.affixIndicesFromFactor=pageData.connections[idx].affixIndicesFromFactor}
fodders.push(newFodder)}
let children=[];for(var i=0;i<pageData.connections.length;i++){let connection=pageData.connections[i];if(connection==null)continue;let childNode=createPageTree(connection);if(childNode&&childNode instanceof PageTreeNode&&childNode.page&&childNode.page instanceof Page){let idx=-1;if(i%2==0)idx=Math.round(i/2);else idx=Math.round((11-i)/2);childNode.page.connectTo(fodders[idx]);children.push(childNode);if(childNode.page.connectedTo&&childNode.page.connectedTo instanceof Fodder&&data&&data.optionList&&data.optionList.support){for(var j=0;j<connection.boosts.length;j++){let boost=connection.boosts[j];for(var k=0;k<data.optionList.support.length;k++){let supportItem=data.optionList.support[k];if(supportItem.value==boost){childNode.page.connectedTo.rateBoostIdx=k;break}}}}
if(childNode.page.connectedTo&&childNode.page.connectedTo instanceof Fodder&&data&&data.optionList&&data.optionList.additional){for(var j=0;j<connection.boosts.length;j++){let boost=connection.boosts[j];for(var k=0;k<data.optionList.additional.length;k++){let addAbilityItem=data.optionList.additional[k];if(addAbilityItem.value==boost){childNode.page.connectedTo.addAbilityItemInUse={transferRate:addAbilityItem.extend,materials:[],isAddAbilityItem:!0,name:addAbilityItem.id,value:addAbilityItem.value}
break}}}}
if(childNode.page.connectedTo&&childNode.page.connectedTo instanceof Fodder&&data&&data.optionList&&data.optionList.potential){for(var j=0;j<connection.boosts.length;j++){let boost=connection.boosts[j];for(var k=0;k<data.optionList.potential.length;k++){let potential=data.optionList.potential[k];if(potential.value==boost){childNode.page.connectedTo.potentialIdx=k;break}}}}
for(var j=0;j<connection.boosts.length;j++){let boost=connection.boosts[j];if(boost=='D01')childNode.page.connectedTo.isSameGear=!1;else if(boost=='D02')childNode.page.connectedTo.isSameGear=!0}}}
let page=(new Page()).addFodders(fodders);let pageTreeNode=(new PageTreeNode()).setPage(page).addPageTreeNodes(children)
return pageTreeNode}}
encodeURLParams(s){if(typeof s!=='string'||s=='')return'';let dict={};let data=(s+"").split("");let out=[];let currChar;let phrase=data[0];let code=256;for(var i=1;i<data.length;i++){currChar=data[i];if(dict[phrase+currChar]!=null){phrase+=currChar}
else{out.push(phrase.length>1?dict[phrase]:phrase.charCodeAt(0));dict[phrase+currChar]=code;code++;phrase=currChar}}
out.push(phrase.length>1?dict[phrase]:phrase.charCodeAt(0));for(var i=0;i<out.length;i++){out[i]=String.fromCharCode(out[i])}
return out.join("")}
decodeURLParams(s){let dict={};let data=(s+"").split("");let currChar=data[0];let oldPhrase=currChar;let out=[currChar];let code=256;let phrase;for(var i=1;i<data.length;i++){let currCode=data[i].charCodeAt(0);if(currCode<256){phrase=data[i]}
else{phrase=dict[currCode]?dict[currCode]:(oldPhrase+currChar)}
out.push(phrase);currChar=phrase.charAt(0);dict[code]=oldPhrase+currChar;code++;oldPhrase=phrase}
return out.join("")}
query({searchRoot,dataClass,properties}){let queue=[];let root=(searchRoot&&searchRoot instanceof PageTreeNode)?searchRoot:this.pageTreeRoot;let results=[];queue.unshift(root);while(queue.length>0){let node=queue.pop();for(var i=0;i<node.size();i++){let child=node.children[i];queue.unshift(child)}
if(isRefAMatch(node))results.push(node);if(node.page&&node.page instanceof Page){if(isRefAMatch(node.page))results.push(node.page);for(var i=0;i<node.page.size();i++){let fodder=node.page.fodders[i];if(fodder&&fodder instanceof Fodder){if(isRefAMatch(fodder))results.push(fodder)}}}}
return results;function isRefAMatch(ref){console.log();let isMatch=!0;if(dataClass){if(ref instanceof dataClass){if(properties){for(var key in properties){if(typeof properties[key]!=='object'){if(ref[key]!=properties[key]){isMatch=!1;break}}
else{for(var propKey in properties[key]){if(typeof properties[key][propKey]!=='object'){if(ref[key][propKey]!=properties[key][propKey]){isMatch=!1;break}}
else{for(var propKey2 in properties[key][propKey]){if(typeof properties[key][propKey][propKey2]!=='object'){if(ref[key][propKey][propKey2]!=properties[key][propKey][propKey2]){isMatch=!1;break}}}}}}}}}
else{isMatch=!1}}
else{if(properties){for(var key in properties){if(typeof properties[key]!=='object'){if(ref[key]!=properties[key]){isMatch=!1;break}}
else{for(var propKey in properties[key]){if(typeof properties[key][propKey]!=='object'){if(ref[key][propKey]!=properties[key][propKey]){isMatch=!1;break}}
else{for(var propKey2 in properties[key][propKey]){if(typeof properties[key][propKey][propKey2]!=='object'){if(ref[key][propKey][propKey2]!=properties[key][propKey][propKey2]){isMatch=!1;break}}}}}}}}}
return isMatch}}
getTreeDepth(){if(!this.pageTreeRoot)return 0;else return getDepthAt(this.pageTreeRoot);function getDepthAt(node){if(!(node instanceof PageTreeNode))return 0;let maxDepth=0;for(var i=0;i<node.size();i++){let childNode=node.children[i];let depthOfChild=getDepthAt(childNode);if(depthOfChild>maxDepth)maxDepth=depthOfChild}
return 1+maxDepth}}}
class PageTreeNode{constructor(isGoal){this.children=[];this.isGoal=(typeof isGoal==='boolean')?isGoal:!1;this.rateBoostOptions=[];this.potentialOptions=[];let funcs=Object.getOwnPropertyNames(PageTreeNode.prototype);for(var i=0;i<funcs.length;i++){let prop=funcs[i];if(prop=='constructor')continue;if(typeof this[prop]=='function'){Object.defineProperty(this,prop,{enumerable:!0,value:this[prop],writable:!1})}}
this.page=null}
toURL(isForSimulator){let url='';let queue=[];let curr;queue.push({node:this,connDist:-1,fodderIdx:-1});let idx=0;while(queue.length>idx){curr=queue[idx].node;for(var i=0;i<curr.size();i++){if(curr.children[i]&&curr.children[i]instanceof PageTreeNode){queue.push({node:curr.children[i],connDist:-1,fodderIdx:-1})}}
idx++}
for(var i=0;i<queue.length;i++){let nodeA=queue[i].node;if(nodeA.page instanceof Page){for(var j=i+1;j<queue.length;j++){let nodeB=queue[j].node;if(nodeB.page instanceof Page){for(var k=0;k<nodeA.page.size();k++){let fodderA=nodeA.page.fodders[k];if(fodderA instanceof Fodder&&fodderA.connectedTo===nodeB.page){queue[j].connDist=j-i;queue[j].fodderIdx=k}}}}}}
for(var i=0;i<queue.length;i++){let node=queue[i].node;if(node.page instanceof Page){url+=node.page.toURL(queue[i].connDist,queue[i].fodderIdx,isForSimulator)}}
return url}
size(){return this.children.length}
toString(){let info=`Node={ isGoal: ${this.isGoal}, page: `;if(this.page&&this.page instanceof Page)
info+=this.page.toString();else info+=`NoPage={this.page}`;info+=`, children: [ `;for(var i=0;i<this.size();i++){if(this.children[i]&&this.children[i]instanceof PageTreeNode)
info+=`${this.children[i].toString()}, `;else info+=`NotANode={this.children[i]}, `}
info+=` ]`;return info}
addPageTreeNodes(pageTreeNodes){if(pageTreeNodes&&pageTreeNodes instanceof PageTreeNode){pageTreeNodes=[pageTreeNodes]}
if(pageTreeNodes&&Array.isArray(pageTreeNodes)){for(var i=0;i<pageTreeNodes.length;i++){if(this.page==null||this.size()>=this.page.size())
break;let pageTreeNode=pageTreeNodes[i];let test=this.find(pageTreeNode);if(pageTreeNode&&(pageTreeNode instanceof PageTreeNode)&&!pageTreeNode.isGoal&&test.length<=0&&pageTreeNode.page.connectedTo instanceof Fodder){pageTreeNode.addRateBoostOptions(this.rateBoostOptions).addPotentialOptions(this.potentialOptions);this.children.push(pageTreeNode);let newEvenChildren=[];for(var k=0;k<this.page.size();k+=2){let fodder=this.page.fodders[k];if(!fodder||!(fodder.connectedTo instanceof Page))
continue;for(var j=0;j<this.size();j++){let childNode=this.children[j];if(!childNode||!childNode.page||!(childNode.page.connectedTo instanceof Fodder))
continue;if(fodder.connectedTo===childNode.page){newEvenChildren.push(childNode)}}}
let newOddChildren=[];for(var k=1;k<this.page.size();k+=2){let fodder=this.page.fodders[k];if(!fodder||!(fodder.connectedTo instanceof Page))
continue;for(var j=0;j<this.size();j++){let childNode=this.children[j];if(!childNode||!childNode.page||!(childNode.page.connectedTo instanceof Fodder))
continue;if(fodder.connectedTo===childNode.page){newOddChildren.unshift(childNode)}}}
this.children=newEvenChildren.concat(newOddChildren)}}}
return this}
find(elem){let elemType=-1;if(elem instanceof Fodder)elemType=0;else if(elem instanceof Page)elemType=1;else if(elem instanceof PageTreeNode)elemType=2;else return[];let thisPage=this.page;if(elemType==2&&elem===this)return[this];if(thisPage){if(elemType==1&&elem===thisPage){return[this,thisPage]}
if(elemType==0){for(var i=0;i<thisPage.size();i++){let fodder=thisPage.fodders[i];if(elem===fodder){return[this,thisPage,fodder]}}}}
for(var i=0;i<this.size();i++){let childNode=this.children[i];let trackingFound=childNode.find(elem);if(Array.isArray(trackingFound)&&trackingFound.length>0){trackingFound.unshift(this);return trackingFound}}
return[]}
setPage(page){if(page&&page instanceof Page&&this.find(page).length<=0){this.page=page;this.page.addRateBoostOptions(this.rateBoostOptions);this.page.addPotentialOptions(this.potentialOptions)}
return this}
removePageTreeNodes(pageTreeNodes){if(pageTreeNodes&&pageTreeNodes instanceof PageTreeNode){pageTreeNodes=[pageTreeNodes]}
if(pageTreeNodes&&Array.isArray(pageTreeNodes)){for(var i=0;i<pageTreeNodes.length;i++){let pageTreeNode=pageTreeNodes[i];if(pageTreeNode&&pageTreeNode instanceof PageTreeNode&&this.children.includes(pageTreeNode)){this.children.splice(this.children.indexOf(pageTreeNode),1)}}}
return this}
findAndRemove(elem){let elemType=-1;if(elem instanceof Fodder)elemType=0;else if(elem instanceof Page)elemType=1;else if(elem instanceof PageTreeNode)elemType=2;else return!1;let thisPage=this.page;if(thisPage){if(elemType==1&&elem===thisPage){this.page=null;return!0}
if(elemType==0){for(var i=0;i<thisPage.fodders;i++){let fodder=thisPage.fodders[i];if(elem===fodder){thisPage.fodders.splice(i,1);return!0}}}}
for(var i=0;i<this.size();i++){let childNode=this.children[i];if(elemType==2&&elem===childNode){this.children.splice(i,1);return!0}
let wasFoundAndRemoved=childNode.findAndRemove(elem);if(wasFoundAndRemoved)return!0}
return!1}
addRateBoostOptions(options){if(options){if(!Array.isArray(options))options=[options];for(var i=0;i<options.length;i++){let rateBoostOption=options[i];if(rateBoostOption&&rateBoostOption.id&&typeof rateBoostOption.id==='string'&&!this.rateBoostOptions.includes(rateBoostOption)){this.rateBoostOptions.push(rateBoostOption)}}
this.page.addRateBoostOptions(options);for(var i=0;i<this.size();i++){this.children[i].addRateBoostOptions(options)}}
return this}
addPotentialOptions(options){if(options){if(!Array.isArray(options))options=[options];for(var i=0;i<options.length;i++){let potentialOption=options[i];if(potentialOption&&potentialOption.id&&typeof potentialOption.id==='string'&&!this.potentialOptions.includes(potentialOption)){this.potentialOptions.push(potentialOption)}}
this.page.addPotentialOptions(options);for(var i=0;i<this.size();i++){this.children[i].addPotentialOptions(options)}}
return this}
connectFodderAtToPageAt(fodderIdx,pageIdx){if(typeof fodderIdx==='number'&&typeof pageIdx==='number'&&this.page&&fodderIdx>=0&&fodderIdx<this.page.fodders.length&&pageIdx>=0&&pageIdx<this.children.length){this.page.fodders[fodderIdx].connectTo(this.children[pageIdx].page)}
return this}}
class Page{constructor(){this.CAPACITY=6;this.MIN_RATE=0;this.MAX_RATE=100;this.fodders=[];this.rateBoostOptions=[];this.potentialOptions=[];let funcs=Object.getOwnPropertyNames(Page.prototype);for(var i=0;i<funcs.length;i++){let prop=funcs[i];if(prop=='constructor')continue;if(typeof this[prop]=='function'){Object.defineProperty(this,prop,{enumerable:!0,value:this[prop],writable:!1})}}
this.successRate=-1;this.connectedTo=null}
toURL(connDist,connFodderIdx,isForSimulator){let url='';for(var i=0;i<this.size();i++){url+=((i==0)?'/s=':(i+'='))+this.fodders[i].toURL()+'&'}
url+='r=';if(this.connectedTo){url+=this.connectedTo.toURL(!0)}
url+='&o=';let hasAddedRate=!1;if(this.connectedTo&&this.connectedTo.rateBoostOptions&&this.connectedTo.rateBoostOptions[this.connectedTo.rateBoostIdx]&&this.connectedTo.rateBoostOptions[this.connectedTo.rateBoostIdx].value){url+=this.connectedTo.rateBoostOptions[this.connectedTo.rateBoostIdx].value;hasAddedRate=!0}
let hasAddedSpecial=!1;if(this.connectedTo&&this.connectedTo instanceof Fodder&&this.connectedTo.addAbilityItemInUse){url+=((hasAddedRate)?'.':'')+this.connectedTo.addAbilityItemInUse.value;hasAddedSpecial=!0}
let hasAddedPotential=!1;if(this.connectedTo&&this.connectedTo.potentialOptions&&this.connectedTo.potentialOptions[this.connectedTo.potentialIdx]&&this.connectedTo.potentialOptions[this.connectedTo.potentialIdx].value){url+=((hasAddedRate||hasAddedSpecial)?'.':'')+this.connectedTo.potentialOptions[this.connectedTo.potentialIdx].value;hasAddedPotential=!0}
if(this.connectedTo&&this.connectedTo.isSameGear){url+=((hasAddedRate||hasAddedSpecial||hasAddedPotential)?'.':'')+((this.connectedTo.isSameGear)?'D02':'D01')}
if(!isForSimulator&&connDist>=0&&connFodderIdx>=0){url+='&d='+connDist+'.'+connFodderIdx}
return url}
size(){return this.fodders.length}
toString(printOnlyHighLevel){let info=`Page={ fodders: [ `;for(var i=0;i<this.size();i++){if(this.fodders[i]&&this.fodders[i]instanceof Fodder)info+=`${this.fodders[i].toString(printOnlyHighLevel)}, `;else info+=`NotAFodder={${this.fodders[i]}}, `}
info+=`], successRate: ${this.successRate}, `;if(!printOnlyHighLevel&&this.connectedTo){info+=`connectedTo: { `;if(this.connectedTo instanceof Fodder)info+=this.connectedTo.toString(!0);else info+=`NotAFodder={${this.connectedTo}}`;info+=` }`}
info+=` }`;return info}
addFodders(fodders){if(fodders&&fodders instanceof Fodder){fodders=[fodders]}
if(fodders&&Array.isArray(fodders)){for(var i=0;i<fodders.length;i++){let fodder=fodders[i];if(fodder&&fodder instanceof Fodder){if(this.size()<this.CAPACITY){fodder.addRateBoostOptions(this.rateBoostOptions);fodder.addPotentialOptions(this.potentialOptions);this.fodders.push(fodder)}
else{console.warn(`Page %o is at capacity and could not add some fodders %o.`,this,fodders);break}}}}
return this}
setSuccessRate(rate){if(typeof rate==='number'&&rate>=this.MIN_RATE&&rate<=this.MAX_RATE){this.successRate=rate}
else{console.warn(`Page %o success rate was not changed from ${this.successRate} to ${rate}.`,this);try{let msg=`@Page.setSuccessRate => rate not set from ${this.successRate} to ${rate} /// this => ${this.toString()} /// pageTreeRoot => `;msg=(ASSISTANT.pageTreeRoot)?ASSISTANT.pageTreeRoot.toString():`root={${ASSISTANT.pageTreeRoot}}`;gaRequests.sendException(msg)}catch(e){}}
return this}
connectTo(fodder){if(fodder==this.connectedTo)return this;if(fodder instanceof Fodder){if(this.connectedTo instanceof Page){this.connectedTo.connectedTo=!1}
this.connectedTo=fodder;fodder.connectTo(this)}
return this}
hasConnection(){return this.connectedTo instanceof Fodder}
removeFodders(fodders){if(fodders&&fodders instanceof Fodder){fodders=[fodders]}
if(fodders&&Array.isArray(fodders)){for(var i=0;i<fodders.length;i++){let fodder=fodders[i];if(fodder&&fodder instanceof Fodder&&this.fodders.includes(fodder)){this.fodders.splice(this.fodders.indexOf(fodder),1)}}}
return this}
addRateBoostOptions(options){if(options){if(!Array.isArray(options))options=[options];for(var i=0;i<options.length;i++){let rateBoostOption=options[i];if(rateBoostOption&&rateBoostOption.id&&typeof rateBoostOption.id==='string'&&!this.rateBoostOptions.includes(rateBoostOption)){this.rateBoostOptions.push(rateBoostOption)}}
for(var i=0;i<this.size();i++){this.fodders[i].addRateBoostOptions(options)}}
return this}
addPotentialOptions(options){if(options){if(!Array.isArray(options))options=[options];for(var i=0;i<options.length;i++){let potentialOption=options[i];if(potentialOption&&potentialOption.id&&typeof potentialOption.id==='string'&&!this.potentialOptions.includes(potentialOption)){this.potentialOptions.push(potentialOption)}}
for(var i=0;i<this.size();i++){this.fodders[i].addPotentialOptions(options)}}
return this}}
class Fodder{constructor(){this.CAPACITY=8;this.MIN_RATE=0;this.MAX_RATE=100;this.affixes=[];this.affixIndicesFromFactor=[];this.affixSuccessRates=[];this.rateBoostOptions=[];this.potentialOptions=[];let funcs=Object.getOwnPropertyNames(Fodder.prototype);for(var i=0;i<funcs.length;i++){let prop=funcs[i];if(prop=='constructor')continue;if(typeof this[prop]=='function'){Object.defineProperty(this,prop,{enumerable:!0,value:this[prop],writable:!1})}}
this.isGoal=!1;this.overallSuccessRate=-1;this.connectedTo=null;this.isSameGear=!1;this.rateBoostIdx=0;this.potentialIdx=0;this.addAbilityItemInUse=null;this.specialAbilityFactor=null}
setGoal(bool){if(typeof bool==='boolean')this.isGoal=bool;return this}
toURL(isForTarget){let url='';for(var i=0;i<this.size();i++){url+=((isForTarget&&this.affixIndicesFromFactor.includes(i))?'*':'')+this.affixes[i].code+((i<this.size()-1)?'.':'')}
if(!isForTarget&&(this.specialAbilityFactor&&this.specialAbilityFactor.code)){url+=((this.size()>0)?'.':'')+'*'+this.specialAbilityFactor.code}
return url}
size(){return this.affixes.length}
toString(printOnlyHighLevel){let info=`Fodder={ affixes: [ `;for(var i=0;i<this.size();i++){if(this.affixes[i]&&this.affixes[i].code&&this.affixes[i].name)info+=`Affix="${this.affixes[i].name}", `;else info+=`NotAnAffix="${this.affixes[i]}", `}
info+=`], idcesFromFactor: [ `;for(var i=0;i<this.affixIndicesFromFactor.length;i++){info+=`${this.affixIndicesFromFactor[i]}, `}
info+=`], affixRates: [ `;for(var i=0;i<this.affixSuccessRates.length;i++){info+=`${this.affixSuccessRates[i]}, `}
info+=`], isGoal: ${this.isGoal}, overallRate: ${this.overallSuccessRate}, `;if(!printOnlyHighLevel&&this.connectedTo){info+=`connectedTo={ `;if(this.connectedTo instanceof Page)info+=this.connectedTo.toString(!0);else info+=`NotAPage={${this.connectedTo}}`;info+=` }`}
info+=`, isSame: ${this.isSameGear}, rateIdx: ${this.rateBoostIdx}, potIdx: ${this.potentialIdx}, addAbility: `;if(this.addAbilityItemInUse&&this.addAbilityItemInUse.name)
info+=`${this.addAbilityItemInUse.name}`;else info+=`${this.addAbilityItemInUse}`;info+=`, factor: `;if(this.specialAbilityFactor&&this.specialAbilityFactor.code)
info+=`${this.specialAbilityFactor.code}`;else info+=`${this.specialAbilityFactor}`;info+=` }`;return info}
addAffixes(affixes){if(affixes&&affixes.code){affixes=[affixes]}
if(affixes&&Array.isArray(affixes)){for(var i=0;i<affixes.length;i++){let affix=affixes[i];if(affix&&affix.code&&!this.affixes.includes(affix)){if(this.size()<this.CAPACITY){this.affixes.push(affix)}
else{console.warn(`Fodder %o is at capacity and could not add some affixes %o.`,this,affixes);break}}}}
return this}
setAddAbilityInUse(addAbilities){if(!addAbilities)return!1;if(!Array.isArray(addAbilities))addAbilities=[addAbilities];for(var i=0;i<addAbilities.length;i++){let addAbility=addAbilities[i];if(addAbility.isAddAbilityItem){this.addAbilityItemInUse=addAbility;return!0}}
return!1}
setSpecialAbilityFactor(abilityFactor){if(!abilityFactor||!abilityFactor.code)return!1;this.specialAbilityFactor=abilityFactor;return!0}
setSuccessRate(overallRate,affixRates){if(typeof overallRate==='number'){this.overallSuccessRate=overallRate;this.affixSuccessRates=affixRates}
else{console.warn(`Page %o success rate was not changed from ${this.successRate} to ${rate}.`,this);try{let msg=`@Fodder.setSuccessRate => rate not set from ${this.successRate} to ${rate} /// this => ${this.toString()} /// pageTreeRoot => `;msg=(ASSISTANT.pageTreeRoot)?ASSISTANT.pageTreeRoot.toString():`root={${ASSISTANT.pageTreeRoot}}`;gaRequests.sendException(msg)}catch(e){}}
return this}
setSameGear(bool){if(typeof bool==='boolean'){this.isSameGear=bool}
return this}
setRateBoostIdx(idx){if(typeof idx==='number'&&idx>=0){this.rateBoostIdx=idx}
return this}
setPotentialIdx(idx){if(typeof idx==='number'&&idx>=0){this.potentialIdx=idx}
return this}
connectTo(page){if(page==this.connectedTo)return this;if(page instanceof Page){if(this.connectedTo instanceof Fodder){this.connectedTo.connectedTo=!1}
this.connectedTo=page;page.connectTo(this)}
return this}
hasConnection(){return this.connectedTo instanceof Page}
removeAffixes(affixes){if(affixes&&affixes.code){affixes=[affixes]}
if(affixes&&Array.isArray(affixes)){for(var i=0;i<affixes.length;i++){let affix=affixes[i];if(affix&&this.affixes.includes(affix)){this.affixes.splice(this.affixes.indexOf(affix),1)}}}
return this}
addRateBoostOptions(options){if(options){if(!Array.isArray(options))options=[options];for(var i=0;i<options.length;i++){let rateBoostOption=options[i];if(rateBoostOption&&rateBoostOption.id&&typeof rateBoostOption.id==='string'&&!this.rateBoostOptions.includes(rateBoostOption)){this.rateBoostOptions.push(rateBoostOption)}}}
return this}
addPotentialOptions(options){if(options){if(!Array.isArray(options))options=[options];for(var i=0;i<options.length;i++){let potentialOption=options[i];if(potentialOption&&potentialOption.id&&typeof potentialOption.id==='string'&&!this.potentialOptions.includes(potentialOption)){this.potentialOptions.push(potentialOption)}}}
return this}
hasNonTransferableAffixes(){for(var i=0;i<this.affixes.length;i++){if(ASSISTANT.affixDB[this.affixes[i].code].choices.length<=0||(ASSISTANT.affixDB[this.affixes[i].code].choices.length==1&&ASSISTANT.affixDB[this.affixes[i].code].choices[0].isAbilityFactor))return!0}
return!1}}
const sessionType=(window.location.search=='')?'New Session':'Returning Session';const sessionStartTime=(new Date()).getTime();const ASSISTANT=new Assistant(data);const VIEW_CONTROLLER=(new ViewController(ASSISTANT));window.addEventListener("load",function(event){document.getElementById('js-disabled').parentNode.removeChild(document.getElementById('js-disabled'));try{gaRequests.create();if(window&&window.location){gaRequests.send('main','entry',{'Session Type':sessionType,'Number Of Sessions':1})}}
catch(e){}});window.addEventListener("beforeunload",function(event){try{let depth=ASSISTANT.getTreeDepth();gaRequests.send('main','entry',{'Time Spent In App':((new Date()).getTime()-sessionStartTime)/1000,'Number Of Levels Created':1,'Tree Depth':depth.toString()})}
catch(e){}});$(document).ready(function(){VIEW_CONTROLLER.setup();VIEW_CONTROLLER.updateFromURL();VIEW_CONTROLLER.updateView();VIEW_CONTROLLER.centerViewAtNode('#goal')});$(window).resize(function(){VIEW_CONTROLLER.updateConnections()})
$(window).bind('popstate',function(event){VIEW_CONTROLLER.updateFromURL();try{gaRequests.send('main','entry',{'Session Type':sessionType,'Number Of History States Popped':1})}
catch(e){}})